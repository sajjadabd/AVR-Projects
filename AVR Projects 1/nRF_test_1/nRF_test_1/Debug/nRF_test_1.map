Archive member included because of file (symbol)

e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
                              e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16a.o (exit)
e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                              mirf.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

PTX                 0x1               mirf.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16a.o
LOAD mirf.o
LOAD nRF_test_1.o
LOAD spi.o
START GROUP
LOAD e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5\libm.a
END GROUP
LOAD e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a
LOAD e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5\libc.a
LOAD e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x24a
 *(.vectors)
 .vectors       0x00000000       0x54 e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16a.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16a.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16a.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x10 e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                0x00000060                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000070        0x8 e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16a.o
 *(.init9)
 *(.text)
 .text          0x00000078        0x4 e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16a.o
                0x00000078                __vector_1
                0x00000078                __vector_12
                0x00000078                __bad_interrupt
                0x00000078                __vector_6
                0x00000078                __vector_3
                0x00000078                __vector_11
                0x00000078                __vector_13
                0x00000078                __vector_17
                0x00000078                __vector_19
                0x00000078                __vector_7
                0x00000078                __vector_5
                0x00000078                __vector_4
                0x00000078                __vector_9
                0x00000078                __vector_2
                0x00000078                __vector_15
                0x00000078                __vector_8
                0x00000078                __vector_14
                0x00000078                __vector_10
                0x00000078                __vector_16
                0x00000078                __vector_18
                0x00000078                __vector_20
 .text          0x0000007c      0x168 mirf.o
                0x0000007c                mirf_init
                0x0000008c                mirf_data_ready
                0x000000a6                mirf_config_register
                0x000000c0                mirf_get_data
                0x000000e8                inter
                0x00000114                mirf_config
                0x00000134                mirf_read_register
                0x0000015a                mirf_write_register
                0x00000180                mirf_set_TADDR
                0x0000018c                mirf_set_RADDR
                0x0000019c                mirf_send
 .text          0x000001e4        0x2 nRF_test_1.o
                0x000001e4                main
 .text          0x000001e6       0x60 spi.o
                0x000001e6                SPI_Init
                0x00000200                SPI_ReadWrite_Block
                0x00000222                SPI_Write_Block
                0x0000023c                SPI_Write_Byte
 .text          0x00000246        0x0 e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .text          0x00000246        0x0 e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                0x00000246                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000246        0x0 e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000246        0x0 e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
                0x00000246                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000246        0x0 e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
                0x00000246                _exit
                0x00000246                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000246        0x4 e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x0000024a                _etext = .

.data           0x00800060        0x0 load address 0x0000024a
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16a.o
 .data          0x00800060        0x0 mirf.o
 .data          0x00800060        0x0 nRF_test_1.o
 .data          0x00800060        0x0 spi.o
 .data          0x00800060        0x0 e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x1
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16a.o
 .bss           0x00800060        0x0 mirf.o
 .bss           0x00800060        0x0 nRF_test_1.o
 .bss           0x00800060        0x0 spi.o
 .bss           0x00800060        0x0 e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_exit.o)
 .bss           0x00800060        0x0 e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800060        0x1 mirf.o
                0x00800060                PTX
                0x00800061                PROVIDE (__bss_end, .)
                0x0000024a                __data_load_start = LOADADDR (.data)
                0x0000024a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800061        0x0
                0x00800061                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800061                PROVIDE (__noinit_end, .)
                0x00800061                _end = .
                0x00800061                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16a.o

.stabstr        0x00000000       0x97
 *(.stabstr)
 .stabstr       0x00000000       0x97 e:/program files (x86)/atmel/atmel studio 6.0/extensions/atmel/avrgcc/3.3.2.31/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm16a.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 mirf.o
 .debug_aranges
                0x00000020       0x20 nRF_test_1.o
 .debug_aranges
                0x00000040       0x20 spi.o

.debug_pubnames
                0x00000000      0x15d
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0xe4 mirf.o
 .debug_pubnames
                0x000000e4       0x1b nRF_test_1.o
 .debug_pubnames
                0x000000ff       0x5e spi.o

.debug_info     0x00000000      0x44d
 *(.debug_info)
 .debug_info    0x00000000      0x28b mirf.o
 .debug_info    0x0000028b       0x77 nRF_test_1.o
 .debug_info    0x00000302      0x14b spi.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x1f7
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0xf9 mirf.o
 .debug_abbrev  0x000000f9       0x41 nRF_test_1.o
 .debug_abbrev  0x0000013a       0xbd spi.o

.debug_line     0x00000000      0x55f
 *(.debug_line)
 .debug_line    0x00000000      0x35f mirf.o
 .debug_line    0x0000035f       0x5b nRF_test_1.o
 .debug_line    0x000003ba      0x1a5 spi.o

.debug_frame    0x00000000      0x130
 *(.debug_frame)
 .debug_frame   0x00000000       0xc0 mirf.o
 .debug_frame   0x000000c0       0x20 nRF_test_1.o
 .debug_frame   0x000000e0       0x50 spi.o

.debug_str      0x00000000      0x1a6
 *(.debug_str)
 .debug_str     0x00000000      0x13c mirf.o
                                0x17a (size before relaxing)
 .debug_str     0x0000013c       0x17 nRF_test_1.o
                                 0xc8 (size before relaxing)
 .debug_str     0x00000153       0x53 spi.o
                                0x116 (size before relaxing)

.debug_loc      0x00000000      0x241
 *(.debug_loc)
 .debug_loc     0x00000000      0x1b4 mirf.o
 .debug_loc     0x000001b4       0x8d spi.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(nRF_test_1.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x00000000       0x4e
 .debug_pubtypes
                0x00000000       0x1e mirf.o
 .debug_pubtypes
                0x0000001e       0x12 nRF_test_1.o
 .debug_pubtypes
                0x00000030       0x1e spi.o
