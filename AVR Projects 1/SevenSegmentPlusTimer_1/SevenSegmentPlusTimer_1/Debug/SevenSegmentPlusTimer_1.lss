
SevenSegmentPlusTimer_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a94  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000008  00800060  00800060  00000b08  2**0
                  ALLOC
  2 .stab         000006cc  00000000  00000000  00000b08  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000097  00000000  00000000  000011d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000020  00000000  00000000  0000126b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000005db  00000000  00000000  0000128b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001424  00000000  00000000  00001866  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000001a7  00000000  00000000  00002c8a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001be4  00000000  00000000  00002e31  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000810  00000000  00000000  00004a18  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004e6  00000000  00000000  00005228  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000a7  00000000  00000000  0000570e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 00000038  00000000  00000000  000057b5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 8e 00 	jmp	0x11c	; 0x11c <__ctors_end>
   4:	0c 94 ab 00 	jmp	0x156	; 0x156 <__bad_interrupt>
   8:	0c 94 ab 00 	jmp	0x156	; 0x156 <__bad_interrupt>
   c:	0c 94 ab 00 	jmp	0x156	; 0x156 <__bad_interrupt>
  10:	0c 94 ab 00 	jmp	0x156	; 0x156 <__bad_interrupt>
  14:	0c 94 ab 00 	jmp	0x156	; 0x156 <__bad_interrupt>
  18:	0c 94 ab 00 	jmp	0x156	; 0x156 <__bad_interrupt>
  1c:	0c 94 ab 00 	jmp	0x156	; 0x156 <__bad_interrupt>
  20:	0c 94 ab 00 	jmp	0x156	; 0x156 <__bad_interrupt>
  24:	0c 94 ab 00 	jmp	0x156	; 0x156 <__bad_interrupt>
  28:	0c 94 ab 00 	jmp	0x156	; 0x156 <__bad_interrupt>
  2c:	0c 94 ab 00 	jmp	0x156	; 0x156 <__bad_interrupt>
  30:	0c 94 ab 00 	jmp	0x156	; 0x156 <__bad_interrupt>
  34:	0c 94 ab 00 	jmp	0x156	; 0x156 <__bad_interrupt>
  38:	0c 94 ab 00 	jmp	0x156	; 0x156 <__bad_interrupt>
  3c:	0c 94 ab 00 	jmp	0x156	; 0x156 <__bad_interrupt>
  40:	0c 94 ab 00 	jmp	0x156	; 0x156 <__bad_interrupt>
  44:	0c 94 ab 00 	jmp	0x156	; 0x156 <__bad_interrupt>
  48:	0c 94 ab 00 	jmp	0x156	; 0x156 <__bad_interrupt>
  4c:	0c 94 ab 00 	jmp	0x156	; 0x156 <__bad_interrupt>
  50:	0c 94 ab 00 	jmp	0x156	; 0x156 <__bad_interrupt>
  54:	d3 00       	.word	0x00d3	; ????
  56:	d6 00       	.word	0x00d6	; ????
  58:	d9 00       	.word	0x00d9	; ????
  5a:	dc 00       	.word	0x00dc	; ????
  5c:	df 00       	.word	0x00df	; ????
  5e:	e2 00       	.word	0x00e2	; ????
  60:	e5 00       	.word	0x00e5	; ????
  62:	e8 00       	.word	0x00e8	; ????
  64:	eb 00       	.word	0x00eb	; ????
  66:	ee 00       	.word	0x00ee	; ????
  68:	f1 00       	.word	0x00f1	; ????
  6a:	f4 00       	.word	0x00f4	; ????
  6c:	f7 00       	.word	0x00f7	; ????
  6e:	fa 00       	.word	0x00fa	; ????
  70:	fd 00       	.word	0x00fd	; ????
  72:	00 01       	movw	r0, r0
  74:	03 01       	movw	r0, r6
  76:	06 01       	movw	r0, r12
  78:	09 01       	movw	r0, r18
  7a:	0c 01       	movw	r0, r24
  7c:	0f 01       	movw	r0, r30
  7e:	12 01       	movw	r2, r4
  80:	15 01       	movw	r2, r10
  82:	18 01       	movw	r2, r16
  84:	1b 01       	movw	r2, r22
  86:	1e 01       	movw	r2, r28
  88:	21 01       	movw	r4, r2
  8a:	24 01       	movw	r4, r8
  8c:	27 01       	movw	r4, r14
  8e:	2a 01       	movw	r4, r20
  90:	2d 01       	movw	r4, r26
  92:	30 01       	movw	r6, r0
  94:	33 01       	movw	r6, r6
  96:	36 01       	movw	r6, r12
  98:	39 01       	movw	r6, r18
  9a:	3c 01       	movw	r6, r24
  9c:	3f 01       	movw	r6, r30
  9e:	42 01       	movw	r8, r4
  a0:	45 01       	movw	r8, r10
  a2:	48 01       	movw	r8, r16
  a4:	4b 01       	movw	r8, r22
  a6:	4e 01       	movw	r8, r28
  a8:	51 01       	movw	r10, r2
  aa:	54 01       	movw	r10, r8
  ac:	57 01       	movw	r10, r14
  ae:	5a 01       	movw	r10, r20
  b0:	5d 01       	movw	r10, r26
  b2:	60 01       	movw	r12, r0
  b4:	63 01       	movw	r12, r6
  b6:	66 01       	movw	r12, r12
  b8:	69 01       	movw	r12, r18
  ba:	6c 01       	movw	r12, r24
  bc:	6f 01       	movw	r12, r30
  be:	72 01       	movw	r14, r4
  c0:	75 01       	movw	r14, r10
  c2:	78 01       	movw	r14, r16
  c4:	7b 01       	movw	r14, r22
  c6:	7e 01       	movw	r14, r28
  c8:	81 01       	movw	r16, r2
  ca:	84 01       	movw	r16, r8
  cc:	87 01       	movw	r16, r14
  ce:	8a 01       	movw	r16, r20
  d0:	8d 01       	movw	r16, r26
  d2:	90 01       	movw	r18, r0
  d4:	93 01       	movw	r18, r6
  d6:	96 01       	movw	r18, r12
  d8:	99 01       	movw	r18, r18
  da:	9c 01       	movw	r18, r24
  dc:	9f 01       	movw	r18, r30
  de:	a2 01       	movw	r20, r4
  e0:	a5 01       	movw	r20, r10
  e2:	a8 01       	movw	r20, r16
  e4:	ab 01       	movw	r20, r22
  e6:	ae 01       	movw	r20, r28
  e8:	b1 01       	movw	r22, r2
  ea:	b4 01       	movw	r22, r8
  ec:	b7 01       	movw	r22, r14
  ee:	ba 01       	movw	r22, r20
  f0:	bd 01       	movw	r22, r26
  f2:	c0 01       	movw	r24, r0
  f4:	c3 01       	movw	r24, r6
  f6:	c6 01       	movw	r24, r12
  f8:	c9 01       	movw	r24, r18
  fa:	cc 01       	movw	r24, r24
  fc:	cf 01       	movw	r24, r30
  fe:	d2 01       	movw	r26, r4
 100:	d5 01       	movw	r26, r10
 102:	d8 01       	movw	r26, r16
 104:	db 01       	movw	r26, r22
 106:	de 01       	movw	r26, r28
 108:	e1 01       	movw	r28, r2
 10a:	e4 01       	movw	r28, r8
 10c:	e7 01       	movw	r28, r14
 10e:	ea 01       	movw	r28, r20
 110:	ed 01       	movw	r28, r26
 112:	f0 01       	movw	r30, r0
 114:	f3 01       	movw	r30, r6
 116:	f6 01       	movw	r30, r12
 118:	f9 01       	movw	r30, r18
 11a:	fc 01       	movw	r30, r24

0000011c <__ctors_end>:
 11c:	11 24       	eor	r1, r1
 11e:	1f be       	out	0x3f, r1	; 63
 120:	cf e5       	ldi	r28, 0x5F	; 95
 122:	d4 e0       	ldi	r29, 0x04	; 4
 124:	de bf       	out	0x3e, r29	; 62
 126:	cd bf       	out	0x3d, r28	; 61

00000128 <__do_copy_data>:
 128:	10 e0       	ldi	r17, 0x00	; 0
 12a:	a0 e6       	ldi	r26, 0x60	; 96
 12c:	b0 e0       	ldi	r27, 0x00	; 0
 12e:	e4 e9       	ldi	r30, 0x94	; 148
 130:	fa e0       	ldi	r31, 0x0A	; 10
 132:	02 c0       	rjmp	.+4      	; 0x138 <__do_copy_data+0x10>
 134:	05 90       	lpm	r0, Z+
 136:	0d 92       	st	X+, r0
 138:	a0 36       	cpi	r26, 0x60	; 96
 13a:	b1 07       	cpc	r27, r17
 13c:	d9 f7       	brne	.-10     	; 0x134 <__do_copy_data+0xc>

0000013e <__do_clear_bss>:
 13e:	10 e0       	ldi	r17, 0x00	; 0
 140:	a0 e6       	ldi	r26, 0x60	; 96
 142:	b0 e0       	ldi	r27, 0x00	; 0
 144:	01 c0       	rjmp	.+2      	; 0x148 <.do_clear_bss_start>

00000146 <.do_clear_bss_loop>:
 146:	1d 92       	st	X+, r1

00000148 <.do_clear_bss_start>:
 148:	a8 36       	cpi	r26, 0x68	; 104
 14a:	b1 07       	cpc	r27, r17
 14c:	e1 f7       	brne	.-8      	; 0x146 <.do_clear_bss_loop>
 14e:	0e 94 39 05 	call	0xa72	; 0xa72 <main>
 152:	0c 94 48 05 	jmp	0xa90	; 0xa90 <_exit>

00000156 <__bad_interrupt>:
 156:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000015a <clearA>:



void clearA()
{
	PORTA &= ~(1 << PINA0);
 15a:	d8 98       	cbi	0x1b, 0	; 27
	PORTA &= ~(1 << PINA1);
 15c:	d9 98       	cbi	0x1b, 1	; 27
	PORTA &= ~(1 << PINA2);
 15e:	da 98       	cbi	0x1b, 2	; 27
	PORTA &= ~(1 << PINA3);
 160:	db 98       	cbi	0x1b, 3	; 27
	PORTA &= ~(1 << PINA4);
 162:	dc 98       	cbi	0x1b, 4	; 27
	PORTA &= ~(1 << PINA5);
 164:	dd 98       	cbi	0x1b, 5	; 27
	PORTA &= ~(1 << PINA6);
 166:	de 98       	cbi	0x1b, 6	; 27
	PORTA &= ~(1 << PINA7);
 168:	df 98       	cbi	0x1b, 7	; 27
}
 16a:	08 95       	ret

0000016c <clearC>:

void clearC()
{
	PORTD &= ~(1 << PIND0);
 16c:	90 98       	cbi	0x12, 0	; 18
	PORTD &= ~(1 << PIND1);
 16e:	91 98       	cbi	0x12, 1	; 18
	PORTD &= ~(1 << PIND2);
 170:	92 98       	cbi	0x12, 2	; 18
	PORTD &= ~(1 << PIND3);
 172:	93 98       	cbi	0x12, 3	; 18
	PORTD &= ~(1 << PIND4);
 174:	94 98       	cbi	0x12, 4	; 18
	PORTD &= ~(1 << PIND5);
 176:	95 98       	cbi	0x12, 5	; 18
	PORTD &= ~(1 << PIND6);
 178:	96 98       	cbi	0x12, 6	; 18
	PORTD &= ~(1 << PIND7);
 17a:	97 98       	cbi	0x12, 7	; 18
}
 17c:	08 95       	ret

0000017e <refresh>:
int pressed1 = 0;
int pressed2 = 0;
int pressed3 = 0;

void refresh(int counter2)
{
 17e:	cf 93       	push	r28
 180:	df 93       	push	r29
 182:	ec 01       	movw	r28, r24
	clearA();
 184:	0e 94 ad 00 	call	0x15a	; 0x15a <clearA>
	clearC();
 188:	0e 94 b6 00 	call	0x16c	; 0x16c <clearC>
	switch(counter2)
 18c:	c4 36       	cpi	r28, 0x64	; 100
 18e:	d1 05       	cpc	r29, r1
 190:	08 f0       	brcs	.+2      	; 0x194 <refresh+0x16>
 192:	34 c1       	rjmp	.+616    	; 0x3fc <refresh+0x27e>
 194:	fe 01       	movw	r30, r28
 196:	e6 5d       	subi	r30, 0xD6	; 214
 198:	ff 4f       	sbci	r31, 0xFF	; 255
 19a:	ee 0f       	add	r30, r30
 19c:	ff 1f       	adc	r31, r31
 19e:	05 90       	lpm	r0, Z+
 1a0:	f4 91       	lpm	r31, Z+
 1a2:	e0 2d       	mov	r30, r0
 1a4:	09 94       	ijmp
	{
		case 0:
			show0();
 1a6:	0e 94 27 03 	call	0x64e	; 0x64e <show0>
			break;
 1aa:	28 c1       	rjmp	.+592    	; 0x3fc <refresh+0x27e>
		case 1:
			show1();
 1ac:	0e 94 22 03 	call	0x644	; 0x644 <show1>
			break;
 1b0:	25 c1       	rjmp	.+586    	; 0x3fc <refresh+0x27e>
		case 2:
			show2();
 1b2:	0e 94 1d 03 	call	0x63a	; 0x63a <show2>
			break;
 1b6:	22 c1       	rjmp	.+580    	; 0x3fc <refresh+0x27e>
		case 3:
			show3();
 1b8:	0e 94 18 03 	call	0x630	; 0x630 <show3>
			break;
 1bc:	1f c1       	rjmp	.+574    	; 0x3fc <refresh+0x27e>
		case 4:
			show4();
 1be:	0e 94 13 03 	call	0x626	; 0x626 <show4>
			break;
 1c2:	1c c1       	rjmp	.+568    	; 0x3fc <refresh+0x27e>
		case 5:
			show5();
 1c4:	0e 94 0e 03 	call	0x61c	; 0x61c <show5>
			break;
 1c8:	19 c1       	rjmp	.+562    	; 0x3fc <refresh+0x27e>
		case 6:
			show6();
 1ca:	0e 94 09 03 	call	0x612	; 0x612 <show6>
			break;
 1ce:	16 c1       	rjmp	.+556    	; 0x3fc <refresh+0x27e>
		case 7:
			show7();
 1d0:	0e 94 04 03 	call	0x608	; 0x608 <show7>
			break;
 1d4:	13 c1       	rjmp	.+550    	; 0x3fc <refresh+0x27e>
		case 8:
			show8();
 1d6:	0e 94 ff 02 	call	0x5fe	; 0x5fe <show8>
			break;
 1da:	10 c1       	rjmp	.+544    	; 0x3fc <refresh+0x27e>
		case 9:
			show9();
 1dc:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <show9>
			break;
 1e0:	0d c1       	rjmp	.+538    	; 0x3fc <refresh+0x27e>
		case 10:
			show10();
 1e2:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <show10>
			break;
 1e6:	0a c1       	rjmp	.+532    	; 0x3fc <refresh+0x27e>
		case 11:
			show11();
 1e8:	0e 94 57 03 	call	0x6ae	; 0x6ae <show11>
			break;
 1ec:	07 c1       	rjmp	.+526    	; 0x3fc <refresh+0x27e>
		case 12:
			show12();
 1ee:	0e 94 52 03 	call	0x6a4	; 0x6a4 <show12>
			break;
 1f2:	04 c1       	rjmp	.+520    	; 0x3fc <refresh+0x27e>
		case 13:
			show13();
 1f4:	0e 94 4d 03 	call	0x69a	; 0x69a <show13>
			break;
 1f8:	01 c1       	rjmp	.+514    	; 0x3fc <refresh+0x27e>
		case 14:
			show14();
 1fa:	0e 94 48 03 	call	0x690	; 0x690 <show14>
			break;
 1fe:	fe c0       	rjmp	.+508    	; 0x3fc <refresh+0x27e>
		case 15:
			show15();
 200:	0e 94 43 03 	call	0x686	; 0x686 <show15>
			break;
 204:	fb c0       	rjmp	.+502    	; 0x3fc <refresh+0x27e>
		case 16:
			show16();
 206:	0e 94 3e 03 	call	0x67c	; 0x67c <show16>
			break;
 20a:	f8 c0       	rjmp	.+496    	; 0x3fc <refresh+0x27e>
		case 17:
			show17();
 20c:	0e 94 39 03 	call	0x672	; 0x672 <show17>
			break;
 210:	f5 c0       	rjmp	.+490    	; 0x3fc <refresh+0x27e>
		case 18:
			show18();
 212:	0e 94 34 03 	call	0x668	; 0x668 <show18>
			break;
 216:	f2 c0       	rjmp	.+484    	; 0x3fc <refresh+0x27e>
		case 19:
			show19();
 218:	0e 94 2f 03 	call	0x65e	; 0x65e <show19>
			break;
 21c:	ef c0       	rjmp	.+478    	; 0x3fc <refresh+0x27e>
		case 20:
			show20();
 21e:	0e 94 94 03 	call	0x728	; 0x728 <show20>
			break;
 222:	ec c0       	rjmp	.+472    	; 0x3fc <refresh+0x27e>
		case 21:
			show21();
 224:	0e 94 8f 03 	call	0x71e	; 0x71e <show21>
			break;
 228:	e9 c0       	rjmp	.+466    	; 0x3fc <refresh+0x27e>
		case 22:
			show22();
 22a:	0e 94 8a 03 	call	0x714	; 0x714 <show22>
			break;
 22e:	e6 c0       	rjmp	.+460    	; 0x3fc <refresh+0x27e>
		case 23:
			show23();
 230:	0e 94 85 03 	call	0x70a	; 0x70a <show23>
			break;
 234:	e3 c0       	rjmp	.+454    	; 0x3fc <refresh+0x27e>
		case 24:
			show24();
 236:	0e 94 80 03 	call	0x700	; 0x700 <show24>
			break;
 23a:	e0 c0       	rjmp	.+448    	; 0x3fc <refresh+0x27e>
		case 25:
			show25();
 23c:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <show25>
			break;
 240:	dd c0       	rjmp	.+442    	; 0x3fc <refresh+0x27e>
		case 26:
			show26();
 242:	0e 94 76 03 	call	0x6ec	; 0x6ec <show26>
			break;
 246:	da c0       	rjmp	.+436    	; 0x3fc <refresh+0x27e>
		case 27:
			show27();
 248:	0e 94 71 03 	call	0x6e2	; 0x6e2 <show27>
			break;
 24c:	d7 c0       	rjmp	.+430    	; 0x3fc <refresh+0x27e>
		case 28:
			show28();
 24e:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <show28>
			break;
 252:	d4 c0       	rjmp	.+424    	; 0x3fc <refresh+0x27e>
		case 29:
			show29();
 254:	0e 94 67 03 	call	0x6ce	; 0x6ce <show29>
			break;
 258:	d1 c0       	rjmp	.+418    	; 0x3fc <refresh+0x27e>
		case 30:
			show30();
 25a:	0e 94 cc 03 	call	0x798	; 0x798 <show30>
			break;
 25e:	ce c0       	rjmp	.+412    	; 0x3fc <refresh+0x27e>
		case 31:
			show31();
 260:	0e 94 c7 03 	call	0x78e	; 0x78e <show31>
			break;
 264:	cb c0       	rjmp	.+406    	; 0x3fc <refresh+0x27e>
		case 32:
			show32();
 266:	0e 94 c2 03 	call	0x784	; 0x784 <show32>
			break;
 26a:	c8 c0       	rjmp	.+400    	; 0x3fc <refresh+0x27e>
		case 33:
			show33();
 26c:	0e 94 bd 03 	call	0x77a	; 0x77a <show33>
			break;
 270:	c5 c0       	rjmp	.+394    	; 0x3fc <refresh+0x27e>
		case 34:
			show34();
 272:	0e 94 b8 03 	call	0x770	; 0x770 <show34>
			break;
 276:	c2 c0       	rjmp	.+388    	; 0x3fc <refresh+0x27e>
		case 35:
			show35();
 278:	0e 94 b3 03 	call	0x766	; 0x766 <show35>
			break;
 27c:	bf c0       	rjmp	.+382    	; 0x3fc <refresh+0x27e>
		case 36:
			show36();
 27e:	0e 94 ae 03 	call	0x75c	; 0x75c <show36>
			break;
 282:	bc c0       	rjmp	.+376    	; 0x3fc <refresh+0x27e>
		case 37:
			show37();
 284:	0e 94 a9 03 	call	0x752	; 0x752 <show37>
			break;
 288:	b9 c0       	rjmp	.+370    	; 0x3fc <refresh+0x27e>
		case 38:
			show38();
 28a:	0e 94 a4 03 	call	0x748	; 0x748 <show38>
			break;
 28e:	b6 c0       	rjmp	.+364    	; 0x3fc <refresh+0x27e>
		case 39:
			show39();
 290:	0e 94 9f 03 	call	0x73e	; 0x73e <show39>
			break;
 294:	b3 c0       	rjmp	.+358    	; 0x3fc <refresh+0x27e>
		case 40:
			show40();
 296:	0e 94 04 04 	call	0x808	; 0x808 <show40>
			break;
 29a:	b0 c0       	rjmp	.+352    	; 0x3fc <refresh+0x27e>
		case 41:
			show41();
 29c:	0e 94 ff 03 	call	0x7fe	; 0x7fe <show41>
			break;
 2a0:	ad c0       	rjmp	.+346    	; 0x3fc <refresh+0x27e>
		case 42:
			show42();
 2a2:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <show42>
			break;
 2a6:	aa c0       	rjmp	.+340    	; 0x3fc <refresh+0x27e>
		case 43:
			show43();
 2a8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <show43>
			break;
 2ac:	a7 c0       	rjmp	.+334    	; 0x3fc <refresh+0x27e>
		case 44:
			show44();
 2ae:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <show44>
			break;
 2b2:	a4 c0       	rjmp	.+328    	; 0x3fc <refresh+0x27e>
		case 45:
			show45();
 2b4:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <show45>
			break;
 2b8:	a1 c0       	rjmp	.+322    	; 0x3fc <refresh+0x27e>
		case 46:
			show46();
 2ba:	0e 94 e6 03 	call	0x7cc	; 0x7cc <show46>
			break;
 2be:	9e c0       	rjmp	.+316    	; 0x3fc <refresh+0x27e>
		case 47:
			show47();
 2c0:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <show47>
			break;
 2c4:	9b c0       	rjmp	.+310    	; 0x3fc <refresh+0x27e>
		case 48:
			show48();
 2c6:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <show48>
			break;
 2ca:	98 c0       	rjmp	.+304    	; 0x3fc <refresh+0x27e>
		case 49:
			show49();
 2cc:	0e 94 d7 03 	call	0x7ae	; 0x7ae <show49>
			break;
 2d0:	95 c0       	rjmp	.+298    	; 0x3fc <refresh+0x27e>
		case 50:
			show50();
 2d2:	0e 94 3c 04 	call	0x878	; 0x878 <show50>
			break;
 2d6:	92 c0       	rjmp	.+292    	; 0x3fc <refresh+0x27e>
		case 51:
			show51();
 2d8:	0e 94 37 04 	call	0x86e	; 0x86e <show51>
			break;
 2dc:	8f c0       	rjmp	.+286    	; 0x3fc <refresh+0x27e>
		case 52:
			show52();
 2de:	0e 94 32 04 	call	0x864	; 0x864 <show52>
			break;
 2e2:	8c c0       	rjmp	.+280    	; 0x3fc <refresh+0x27e>
		case 53:
			show53();
 2e4:	0e 94 2d 04 	call	0x85a	; 0x85a <show53>
			break;
 2e8:	89 c0       	rjmp	.+274    	; 0x3fc <refresh+0x27e>
		case 54:
			show54();
 2ea:	0e 94 28 04 	call	0x850	; 0x850 <show54>
			break;
 2ee:	86 c0       	rjmp	.+268    	; 0x3fc <refresh+0x27e>
		case 55:
			show55();
 2f0:	0e 94 23 04 	call	0x846	; 0x846 <show55>
			break;
 2f4:	83 c0       	rjmp	.+262    	; 0x3fc <refresh+0x27e>
		case 56:
			show56();
 2f6:	0e 94 1e 04 	call	0x83c	; 0x83c <show56>
			break;
 2fa:	80 c0       	rjmp	.+256    	; 0x3fc <refresh+0x27e>
		case 57:
			show57();
 2fc:	0e 94 19 04 	call	0x832	; 0x832 <show57>
			break;
 300:	7d c0       	rjmp	.+250    	; 0x3fc <refresh+0x27e>
		case 58:
			show58();
 302:	0e 94 14 04 	call	0x828	; 0x828 <show58>
			break;
 306:	7a c0       	rjmp	.+244    	; 0x3fc <refresh+0x27e>
		case 59:
			show59();
 308:	0e 94 0f 04 	call	0x81e	; 0x81e <show59>
			break;
 30c:	77 c0       	rjmp	.+238    	; 0x3fc <refresh+0x27e>
		case 60:
			show60();
 30e:	0e 94 75 04 	call	0x8ea	; 0x8ea <show60>
			break;
 312:	74 c0       	rjmp	.+232    	; 0x3fc <refresh+0x27e>
		case 61:
			show61();
 314:	0e 94 70 04 	call	0x8e0	; 0x8e0 <show61>
			break;
 318:	71 c0       	rjmp	.+226    	; 0x3fc <refresh+0x27e>
		case 62:
			show62();
 31a:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <show62>
			break;
 31e:	6e c0       	rjmp	.+220    	; 0x3fc <refresh+0x27e>
		case 63:
			show63();
 320:	0e 94 66 04 	call	0x8cc	; 0x8cc <show63>
			break;
 324:	6b c0       	rjmp	.+214    	; 0x3fc <refresh+0x27e>
		case 64:
			show64();
 326:	0e 94 61 04 	call	0x8c2	; 0x8c2 <show64>
			break;
 32a:	68 c0       	rjmp	.+208    	; 0x3fc <refresh+0x27e>
		case 65:
			show65();
 32c:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <show65>
			break;
 330:	65 c0       	rjmp	.+202    	; 0x3fc <refresh+0x27e>
		case 66:
			show66();
 332:	0e 94 57 04 	call	0x8ae	; 0x8ae <show66>
			break;
 336:	62 c0       	rjmp	.+196    	; 0x3fc <refresh+0x27e>
		case 67:
			show67();
 338:	0e 94 52 04 	call	0x8a4	; 0x8a4 <show67>
			break;
 33c:	5f c0       	rjmp	.+190    	; 0x3fc <refresh+0x27e>
		case 68:
			show68();
 33e:	0e 94 4d 04 	call	0x89a	; 0x89a <show68>
			break;
 342:	5c c0       	rjmp	.+184    	; 0x3fc <refresh+0x27e>
		case 69:
			show69();
 344:	0e 94 48 04 	call	0x890	; 0x890 <show69>
			break;
 348:	59 c0       	rjmp	.+178    	; 0x3fc <refresh+0x27e>
		case 70:
			show70();
 34a:	0e 94 ab 04 	call	0x956	; 0x956 <show70>
			break;
 34e:	56 c0       	rjmp	.+172    	; 0x3fc <refresh+0x27e>
		case 71:
			show71();
 350:	0e 94 a6 04 	call	0x94c	; 0x94c <show71>
			break;
 354:	53 c0       	rjmp	.+166    	; 0x3fc <refresh+0x27e>
		case 72:
			show72();
 356:	0e 94 a1 04 	call	0x942	; 0x942 <show72>
			break;
 35a:	50 c0       	rjmp	.+160    	; 0x3fc <refresh+0x27e>
		case 73:
			show73();
 35c:	0e 94 9c 04 	call	0x938	; 0x938 <show73>
			break;
 360:	4d c0       	rjmp	.+154    	; 0x3fc <refresh+0x27e>
		case 74:
			show74();
 362:	0e 94 97 04 	call	0x92e	; 0x92e <show74>
			break;
 366:	4a c0       	rjmp	.+148    	; 0x3fc <refresh+0x27e>
		case 75:
			show75();
 368:	0e 94 92 04 	call	0x924	; 0x924 <show75>
			break;
 36c:	47 c0       	rjmp	.+142    	; 0x3fc <refresh+0x27e>
		case 76:
			show76();
 36e:	0e 94 8d 04 	call	0x91a	; 0x91a <show76>
			break;
 372:	44 c0       	rjmp	.+136    	; 0x3fc <refresh+0x27e>
		case 77:
			show77();
 374:	0e 94 88 04 	call	0x910	; 0x910 <show77>
			break;
 378:	41 c0       	rjmp	.+130    	; 0x3fc <refresh+0x27e>
		case 78:
			show78();
 37a:	0e 94 83 04 	call	0x906	; 0x906 <show78>
			break;
 37e:	3e c0       	rjmp	.+124    	; 0x3fc <refresh+0x27e>
		case 79:
			show79();
 380:	0e 94 7e 04 	call	0x8fc	; 0x8fc <show79>
			break;
 384:	3b c0       	rjmp	.+118    	; 0x3fc <refresh+0x27e>
		case 80:
			show80();
 386:	0e 94 e5 04 	call	0x9ca	; 0x9ca <show80>
			break;
 38a:	38 c0       	rjmp	.+112    	; 0x3fc <refresh+0x27e>
		case 81:
			show81();
 38c:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <show81>
			break;
 390:	35 c0       	rjmp	.+106    	; 0x3fc <refresh+0x27e>
		case 82:
			show82();
 392:	0e 94 db 04 	call	0x9b6	; 0x9b6 <show82>
			break;
 396:	32 c0       	rjmp	.+100    	; 0x3fc <refresh+0x27e>
		case 83:
			show83();
 398:	0e 94 d6 04 	call	0x9ac	; 0x9ac <show83>
			break;
 39c:	2f c0       	rjmp	.+94     	; 0x3fc <refresh+0x27e>
		case 84:
			show84();
 39e:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <show84>
			break;
 3a2:	2c c0       	rjmp	.+88     	; 0x3fc <refresh+0x27e>
		case 85:
			show85();
 3a4:	0e 94 cc 04 	call	0x998	; 0x998 <show85>
			break;
 3a8:	29 c0       	rjmp	.+82     	; 0x3fc <refresh+0x27e>
		case 86:
			show86();
 3aa:	0e 94 c7 04 	call	0x98e	; 0x98e <show86>
			break;
 3ae:	26 c0       	rjmp	.+76     	; 0x3fc <refresh+0x27e>
		case 87:
			show87();
 3b0:	0e 94 c2 04 	call	0x984	; 0x984 <show87>
			break;
 3b4:	23 c0       	rjmp	.+70     	; 0x3fc <refresh+0x27e>
		case 88:
			show88();
 3b6:	0e 94 bd 04 	call	0x97a	; 0x97a <show88>
			break;
 3ba:	20 c0       	rjmp	.+64     	; 0x3fc <refresh+0x27e>
		case 89:
			show89();
 3bc:	0e 94 b8 04 	call	0x970	; 0x970 <show89>
			break;
 3c0:	1d c0       	rjmp	.+58     	; 0x3fc <refresh+0x27e>
		case 90:
			show90();
 3c2:	0e 94 1e 05 	call	0xa3c	; 0xa3c <show90>
			break;
 3c6:	1a c0       	rjmp	.+52     	; 0x3fc <refresh+0x27e>
		case 91:
			show91();
 3c8:	0e 94 19 05 	call	0xa32	; 0xa32 <show91>
			break;
 3cc:	17 c0       	rjmp	.+46     	; 0x3fc <refresh+0x27e>
		case 92:
			show92();
 3ce:	0e 94 14 05 	call	0xa28	; 0xa28 <show92>
			break;
 3d2:	14 c0       	rjmp	.+40     	; 0x3fc <refresh+0x27e>
		case 93:
			show93();
 3d4:	0e 94 0f 05 	call	0xa1e	; 0xa1e <show93>
			break;
 3d8:	11 c0       	rjmp	.+34     	; 0x3fc <refresh+0x27e>
		case 94:
			show94();
 3da:	0e 94 0a 05 	call	0xa14	; 0xa14 <show94>
			break;
 3de:	0e c0       	rjmp	.+28     	; 0x3fc <refresh+0x27e>
		case 95:
			show95();
 3e0:	0e 94 05 05 	call	0xa0a	; 0xa0a <show95>
			break;
 3e4:	0b c0       	rjmp	.+22     	; 0x3fc <refresh+0x27e>
		case 96:
			show96();
 3e6:	0e 94 00 05 	call	0xa00	; 0xa00 <show96>
			break;
 3ea:	08 c0       	rjmp	.+16     	; 0x3fc <refresh+0x27e>
		case 97:
			show97();
 3ec:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <show97>
			break;
 3f0:	05 c0       	rjmp	.+10     	; 0x3fc <refresh+0x27e>
		case 98:
			show98();
 3f2:	0e 94 f6 04 	call	0x9ec	; 0x9ec <show98>
			break;
 3f6:	02 c0       	rjmp	.+4      	; 0x3fc <refresh+0x27e>
		case 99:
			show99();
 3f8:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <show99>
			break;
		default:
			break;
	}
}
 3fc:	df 91       	pop	r29
 3fe:	cf 91       	pop	r28
 400:	08 95       	ret

00000402 <ScanButton1>:


void ScanButton1()//plus
{
	
	if(bit_is_clear(PINB, 0))
 402:	b0 99       	sbic	0x16, 0	; 22
 404:	14 c0       	rjmp	.+40     	; 0x42e <ScanButton1+0x2c>
	{
		if(pressed1 >= 1000)
 406:	80 91 62 00 	lds	r24, 0x0062
 40a:	90 91 63 00 	lds	r25, 0x0063
 40e:	23 e0       	ldi	r18, 0x03	; 3
 410:	88 3e       	cpi	r24, 0xE8	; 232
 412:	92 07       	cpc	r25, r18
 414:	3c f0       	brlt	.+14     	; 0x424 <ScanButton1+0x22>
		{
			pressed1 = 500;
 416:	84 ef       	ldi	r24, 0xF4	; 244
 418:	91 e0       	ldi	r25, 0x01	; 1
 41a:	90 93 63 00 	sts	0x0063, r25
 41e:	80 93 62 00 	sts	0x0062, r24
 422:	0d c0       	rjmp	.+26     	; 0x43e <ScanButton1+0x3c>
		}
		else
		{
			pressed1++;
 424:	01 96       	adiw	r24, 0x01	; 1
 426:	90 93 63 00 	sts	0x0063, r25
 42a:	80 93 62 00 	sts	0x0062, r24
		}							
	}	
		
	if(pressed1 >= 400)
 42e:	80 91 62 00 	lds	r24, 0x0062
 432:	90 91 63 00 	lds	r25, 0x0063
 436:	21 e0       	ldi	r18, 0x01	; 1
 438:	80 39       	cpi	r24, 0x90	; 144
 43a:	92 07       	cpc	r25, r18
 43c:	c4 f0       	brlt	.+48     	; 0x46e <__stack+0xf>
	{
		if(bit_is_clear(PINB,0))
 43e:	b0 9b       	sbis	0x16, 0	; 22
 440:	16 c0       	rjmp	.+44     	; 0x46e <__stack+0xf>
		{
			//Do Nothing
		}
		else
		{
			if(counter < 99)
 442:	80 91 60 00 	lds	r24, 0x0060
 446:	90 91 61 00 	lds	r25, 0x0061
 44a:	83 36       	cpi	r24, 0x63	; 99
 44c:	91 05       	cpc	r25, r1
 44e:	2c f4       	brge	.+10     	; 0x45a <ScanButton1+0x58>
			{
				counter++;
 450:	01 96       	adiw	r24, 0x01	; 1
 452:	90 93 61 00 	sts	0x0061, r25
 456:	80 93 60 00 	sts	0x0060, r24
			}
			refresh(counter);
 45a:	80 91 60 00 	lds	r24, 0x0060
 45e:	90 91 61 00 	lds	r25, 0x0061
 462:	0e 94 bf 00 	call	0x17e	; 0x17e <refresh>
			//Do Something
			//PORTB ^= 1 << INPUT1;
			pressed1 = 0;					
 466:	10 92 63 00 	sts	0x0063, r1
 46a:	10 92 62 00 	sts	0x0062, r1
 46e:	08 95       	ret

00000470 <ScanButton2>:
}

void ScanButton2()//minus
{
	
	if(bit_is_clear(PINB, 1))
 470:	b1 99       	sbic	0x16, 1	; 22
 472:	14 c0       	rjmp	.+40     	; 0x49c <ScanButton2+0x2c>
	{
		if(pressed2 >= 1000)
 474:	80 91 64 00 	lds	r24, 0x0064
 478:	90 91 65 00 	lds	r25, 0x0065
 47c:	23 e0       	ldi	r18, 0x03	; 3
 47e:	88 3e       	cpi	r24, 0xE8	; 232
 480:	92 07       	cpc	r25, r18
 482:	3c f0       	brlt	.+14     	; 0x492 <ScanButton2+0x22>
		{
			pressed2 = 500;
 484:	84 ef       	ldi	r24, 0xF4	; 244
 486:	91 e0       	ldi	r25, 0x01	; 1
 488:	90 93 65 00 	sts	0x0065, r25
 48c:	80 93 64 00 	sts	0x0064, r24
 490:	0d c0       	rjmp	.+26     	; 0x4ac <ScanButton2+0x3c>
		}
		else
		{
			pressed2++;
 492:	01 96       	adiw	r24, 0x01	; 1
 494:	90 93 65 00 	sts	0x0065, r25
 498:	80 93 64 00 	sts	0x0064, r24
		}							
	}	
		
	if(pressed2 >= 400)
 49c:	80 91 64 00 	lds	r24, 0x0064
 4a0:	90 91 65 00 	lds	r25, 0x0065
 4a4:	21 e0       	ldi	r18, 0x01	; 1
 4a6:	80 39       	cpi	r24, 0x90	; 144
 4a8:	92 07       	cpc	r25, r18
 4aa:	c4 f0       	brlt	.+48     	; 0x4dc <ScanButton2+0x6c>
	{
		if(bit_is_clear(PINB,1))
 4ac:	b1 9b       	sbis	0x16, 1	; 22
 4ae:	16 c0       	rjmp	.+44     	; 0x4dc <ScanButton2+0x6c>
		{
			//Do Nothing
		}
		else
		{
			if(counter > 0)
 4b0:	80 91 60 00 	lds	r24, 0x0060
 4b4:	90 91 61 00 	lds	r25, 0x0061
 4b8:	18 16       	cp	r1, r24
 4ba:	19 06       	cpc	r1, r25
 4bc:	2c f4       	brge	.+10     	; 0x4c8 <ScanButton2+0x58>
			{
				counter--;
 4be:	01 97       	sbiw	r24, 0x01	; 1
 4c0:	90 93 61 00 	sts	0x0061, r25
 4c4:	80 93 60 00 	sts	0x0060, r24
			}
			
			refresh(counter);
 4c8:	80 91 60 00 	lds	r24, 0x0060
 4cc:	90 91 61 00 	lds	r25, 0x0061
 4d0:	0e 94 bf 00 	call	0x17e	; 0x17e <refresh>
			//Do Something
			//PORTB ^= 1 << INPUT2;
			pressed2 = 0;					
 4d4:	10 92 65 00 	sts	0x0065, r1
 4d8:	10 92 64 00 	sts	0x0064, r1
 4dc:	08 95       	ret

000004de <ScanButton3>:
	}
}


void ScanButton3()//start
{
 4de:	cf 93       	push	r28
 4e0:	df 93       	push	r29
	
	if(bit_is_clear(PINB, 2))
 4e2:	b2 99       	sbic	0x16, 2	; 22
 4e4:	14 c0       	rjmp	.+40     	; 0x50e <ScanButton3+0x30>
	{
		if(pressed3 >= 1000)
 4e6:	80 91 66 00 	lds	r24, 0x0066
 4ea:	90 91 67 00 	lds	r25, 0x0067
 4ee:	23 e0       	ldi	r18, 0x03	; 3
 4f0:	88 3e       	cpi	r24, 0xE8	; 232
 4f2:	92 07       	cpc	r25, r18
 4f4:	3c f0       	brlt	.+14     	; 0x504 <ScanButton3+0x26>
		{
			pressed3 = 500;
 4f6:	84 ef       	ldi	r24, 0xF4	; 244
 4f8:	91 e0       	ldi	r25, 0x01	; 1
 4fa:	90 93 67 00 	sts	0x0067, r25
 4fe:	80 93 66 00 	sts	0x0066, r24
 502:	0d c0       	rjmp	.+26     	; 0x51e <ScanButton3+0x40>
		}
		else
		{
			pressed3++;
 504:	01 96       	adiw	r24, 0x01	; 1
 506:	90 93 67 00 	sts	0x0067, r25
 50a:	80 93 66 00 	sts	0x0066, r24
		}							
	}	
		
	if(pressed3 >= 400)
 50e:	80 91 66 00 	lds	r24, 0x0066
 512:	90 91 67 00 	lds	r25, 0x0067
 516:	a1 e0       	ldi	r26, 0x01	; 1
 518:	80 39       	cpi	r24, 0x90	; 144
 51a:	9a 07       	cpc	r25, r26
 51c:	2c f1       	brlt	.+74     	; 0x568 <ScanButton3+0x8a>
	{
		if(bit_is_clear(PINB,2))
 51e:	b2 9b       	sbis	0x16, 2	; 22
 520:	23 c0       	rjmp	.+70     	; 0x568 <ScanButton3+0x8a>
		{
			//Do Nothing
		}
		else
		{
			PORTB |=  1 << OUTPUT;
 522:	c3 9a       	sbi	0x18, 3	; 24
			//_delay_ms(counter * 1000);
			for(int i=counter;i>0;i--)
 524:	c0 91 60 00 	lds	r28, 0x0060
 528:	d0 91 61 00 	lds	r29, 0x0061
 52c:	1c 16       	cp	r1, r28
 52e:	1d 06       	cpc	r1, r29
 530:	84 f4       	brge	.+32     	; 0x552 <ScanButton3+0x74>
			{
				refresh(i);
 532:	ce 01       	movw	r24, r28
 534:	0e 94 bf 00 	call	0x17e	; 0x17e <refresh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 538:	8f e3       	ldi	r24, 0x3F	; 63
 53a:	9d e0       	ldi	r25, 0x0D	; 13
 53c:	a3 e0       	ldi	r26, 0x03	; 3
 53e:	81 50       	subi	r24, 0x01	; 1
 540:	90 40       	sbci	r25, 0x00	; 0
 542:	a0 40       	sbci	r26, 0x00	; 0
 544:	e1 f7       	brne	.-8      	; 0x53e <ScanButton3+0x60>
 546:	00 c0       	rjmp	.+0      	; 0x548 <ScanButton3+0x6a>
 548:	00 00       	nop
		}
		else
		{
			PORTB |=  1 << OUTPUT;
			//_delay_ms(counter * 1000);
			for(int i=counter;i>0;i--)
 54a:	21 97       	sbiw	r28, 0x01	; 1
 54c:	1c 16       	cp	r1, r28
 54e:	1d 06       	cpc	r1, r29
 550:	84 f3       	brlt	.-32     	; 0x532 <ScanButton3+0x54>
				refresh(i);
				_delay_ms(1000);
				
			}
			//delay();
			PORTB &=  ~(1 << OUTPUT);
 552:	c3 98       	cbi	0x18, 3	; 24
			refresh(counter);
 554:	80 91 60 00 	lds	r24, 0x0060
 558:	90 91 61 00 	lds	r25, 0x0061
 55c:	0e 94 bf 00 	call	0x17e	; 0x17e <refresh>
			//Do Something
			//PORTB ^= 1 << INPUT2;
			pressed3 = 0;					
 560:	10 92 67 00 	sts	0x0067, r1
 564:	10 92 66 00 	sts	0x0066, r1
		}
	}
}
 568:	df 91       	pop	r29
 56a:	cf 91       	pop	r28
 56c:	08 95       	ret

0000056e <show0_A>:
	PORTD &= ~(1 << PIND7);
}

void show0_A()
{
	PORTA |= 1 << A1;
 56e:	d8 9a       	sbi	0x1b, 0	; 27
	PORTA |= 1 << B1;
 570:	d9 9a       	sbi	0x1b, 1	; 27
	PORTA |= 1 << C1;
 572:	da 9a       	sbi	0x1b, 2	; 27
	PORTA |= 1 << D1;
 574:	db 9a       	sbi	0x1b, 3	; 27
	PORTA |= 1 << E1;
 576:	dc 9a       	sbi	0x1b, 4	; 27
	PORTA |= 1 << F1;
 578:	dd 9a       	sbi	0x1b, 5	; 27
}
 57a:	08 95       	ret

0000057c <show1_A>:

void show1_A()
{
	PORTA |= 1 << F1;
 57c:	dd 9a       	sbi	0x1b, 5	; 27
	PORTA |= 1 << E1;
 57e:	dc 9a       	sbi	0x1b, 4	; 27
}
 580:	08 95       	ret

00000582 <show2_A>:

void show2_A()
{
	PORTA |= 1 << A1;
 582:	d8 9a       	sbi	0x1b, 0	; 27
	PORTA |= 1 << B1;
 584:	d9 9a       	sbi	0x1b, 1	; 27
	PORTA |= 1 << G1;
 586:	de 9a       	sbi	0x1b, 6	; 27
	PORTA |= 1 << E1;
 588:	dc 9a       	sbi	0x1b, 4	; 27
	PORTA |= 1 << D1;
 58a:	db 9a       	sbi	0x1b, 3	; 27
}
 58c:	08 95       	ret

0000058e <show3_A>:

void show3_A()
{
	PORTA |= 1 << A1;
 58e:	d8 9a       	sbi	0x1b, 0	; 27
	PORTA |= 1 << B1;
 590:	d9 9a       	sbi	0x1b, 1	; 27
	PORTA |= 1 << G1;
 592:	de 9a       	sbi	0x1b, 6	; 27
	PORTA |= 1 << C1;
 594:	da 9a       	sbi	0x1b, 2	; 27
	PORTA |= 1 << D1;
 596:	db 9a       	sbi	0x1b, 3	; 27
}
 598:	08 95       	ret

0000059a <show4_A>:

void show4_A()
{
	PORTA |= 1 << F1;
 59a:	dd 9a       	sbi	0x1b, 5	; 27
	PORTA |= 1 << G1;
 59c:	de 9a       	sbi	0x1b, 6	; 27
	PORTA |= 1 << B1;
 59e:	d9 9a       	sbi	0x1b, 1	; 27
	PORTA |= 1 << B1;
 5a0:	d9 9a       	sbi	0x1b, 1	; 27
	PORTA |= 1 << C1;
 5a2:	da 9a       	sbi	0x1b, 2	; 27
}
 5a4:	08 95       	ret

000005a6 <show5_A>:

void show5_A()
{
	PORTA |= 1 << A1;
 5a6:	d8 9a       	sbi	0x1b, 0	; 27
	PORTA |= 1 << F1;
 5a8:	dd 9a       	sbi	0x1b, 5	; 27
	PORTA |= 1 << G1;
 5aa:	de 9a       	sbi	0x1b, 6	; 27
	PORTA |= 1 << C1;
 5ac:	da 9a       	sbi	0x1b, 2	; 27
	PORTA |= 1 << D1;
 5ae:	db 9a       	sbi	0x1b, 3	; 27
}
 5b0:	08 95       	ret

000005b2 <show6_A>:

void show6_A()
{
	PORTA |= 1 << G1;
 5b2:	de 9a       	sbi	0x1b, 6	; 27
	PORTA |= 1 << C1;
 5b4:	da 9a       	sbi	0x1b, 2	; 27
	PORTA |= 1 << D1;
 5b6:	db 9a       	sbi	0x1b, 3	; 27
	PORTA |= 1 << E1;
 5b8:	dc 9a       	sbi	0x1b, 4	; 27
	PORTA |= 1 << F1;
 5ba:	dd 9a       	sbi	0x1b, 5	; 27
	PORTA |= 1 << A1;
 5bc:	d8 9a       	sbi	0x1b, 0	; 27
}
 5be:	08 95       	ret

000005c0 <show7_A>:

void show7_A()
{
	PORTA |= 1 << A1;
 5c0:	d8 9a       	sbi	0x1b, 0	; 27
	PORTA |= 1 << B1;
 5c2:	d9 9a       	sbi	0x1b, 1	; 27
	PORTA |= 1 << C1;
 5c4:	da 9a       	sbi	0x1b, 2	; 27
}
 5c6:	08 95       	ret

000005c8 <show8_A>:

void show8_A()
{
	PORTA |= 1 << A1;
 5c8:	d8 9a       	sbi	0x1b, 0	; 27
	PORTA |= 1 << B1;
 5ca:	d9 9a       	sbi	0x1b, 1	; 27
	PORTA |= 1 << C1;
 5cc:	da 9a       	sbi	0x1b, 2	; 27
	PORTA |= 1 << D1;
 5ce:	db 9a       	sbi	0x1b, 3	; 27
	PORTA |= 1 << E1;
 5d0:	dc 9a       	sbi	0x1b, 4	; 27
	PORTA |= 1 << F1;
 5d2:	dd 9a       	sbi	0x1b, 5	; 27
	PORTA |= 1 << G1;
 5d4:	de 9a       	sbi	0x1b, 6	; 27
}
 5d6:	08 95       	ret

000005d8 <show9_A>:

void show9_A()
{
	PORTA |= 1 << A1;
 5d8:	d8 9a       	sbi	0x1b, 0	; 27
	PORTA |= 1 << B1;
 5da:	d9 9a       	sbi	0x1b, 1	; 27
	PORTA |= 1 << G1;
 5dc:	de 9a       	sbi	0x1b, 6	; 27
	PORTA |= 1 << F1;
 5de:	dd 9a       	sbi	0x1b, 5	; 27
	PORTA |= 1 << C1;
 5e0:	da 9a       	sbi	0x1b, 2	; 27
	PORTA |= 1 << D1;
 5e2:	db 9a       	sbi	0x1b, 3	; 27
}
 5e4:	08 95       	ret

000005e6 <show0_C>:

//----------------------------------

void show0_C()
{
	PORTD |= 1 << A2;
 5e6:	90 9a       	sbi	0x12, 0	; 18
	PORTD |= 1 << B2;
 5e8:	91 9a       	sbi	0x12, 1	; 18
	PORTD |= 1 << C2;
 5ea:	92 9a       	sbi	0x12, 2	; 18
	PORTD |= 1 << D2;
 5ec:	93 9a       	sbi	0x12, 3	; 18
	PORTD |= 1 << E2;
 5ee:	94 9a       	sbi	0x12, 4	; 18
	PORTD |= 1 << F2;
 5f0:	95 9a       	sbi	0x12, 5	; 18
}
 5f2:	08 95       	ret

000005f4 <show9>:
	show8_A();
}

void show9()
{
	show0_C();
 5f4:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <show0_C>
	show9_A();
 5f8:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <show9_A>
}
 5fc:	08 95       	ret

000005fe <show8>:
	show7_A();
}

void show8()
{
	show0_C();
 5fe:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <show0_C>
	show8_A();
 602:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <show8_A>
}
 606:	08 95       	ret

00000608 <show7>:
	show6_A();
}

void show7()
{
	show0_C();
 608:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <show0_C>
	show7_A();
 60c:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <show7_A>
}
 610:	08 95       	ret

00000612 <show6>:
	show5_A();
}

void show6()
{
	show0_C();
 612:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <show0_C>
	show6_A();
 616:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <show6_A>
}
 61a:	08 95       	ret

0000061c <show5>:
	show4_A();
}

void show5()
{
	show0_C();
 61c:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <show0_C>
	show5_A();
 620:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <show5_A>
}
 624:	08 95       	ret

00000626 <show4>:
	show3_A();	
}

void show4()
{
	show0_C();
 626:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <show0_C>
	show4_A();
 62a:	0e 94 cd 02 	call	0x59a	; 0x59a <show4_A>
}
 62e:	08 95       	ret

00000630 <show3>:
	show2_A();
}

void show3()
{
	show0_C();
 630:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <show0_C>
	show3_A();	
 634:	0e 94 c7 02 	call	0x58e	; 0x58e <show3_A>
}
 638:	08 95       	ret

0000063a <show2>:
	show1_A();
}

void show2()
{
	show0_C();
 63a:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <show0_C>
	show2_A();
 63e:	0e 94 c1 02 	call	0x582	; 0x582 <show2_A>
}
 642:	08 95       	ret

00000644 <show1>:
}


void show1()
{
	show0_C();
 644:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <show0_C>
	show1_A();
 648:	0e 94 be 02 	call	0x57c	; 0x57c <show1_A>
}
 64c:	08 95       	ret

0000064e <show0>:

//---------------------------------------

void show0()
{
	show0_C();
 64e:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <show0_C>
	show0_A();
 652:	0e 94 b7 02 	call	0x56e	; 0x56e <show0_A>
}
 656:	08 95       	ret

00000658 <show1_C>:
	PORTD |= 1 << F2;
}

void show1_C()
{
	PORTD |= 1 << F2;
 658:	95 9a       	sbi	0x12, 5	; 18
	PORTD |= 1 << E2;
 65a:	94 9a       	sbi	0x12, 4	; 18
}
 65c:	08 95       	ret

0000065e <show19>:
	show8_A();
}

void show19()
{
	show1_C();
 65e:	0e 94 2c 03 	call	0x658	; 0x658 <show1_C>
	show9_A();
 662:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <show9_A>
}
 666:	08 95       	ret

00000668 <show18>:
	show7_A();
}

void show18()
{
	show1_C();
 668:	0e 94 2c 03 	call	0x658	; 0x658 <show1_C>
	show8_A();
 66c:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <show8_A>
}
 670:	08 95       	ret

00000672 <show17>:
	show6_A();
}

void show17()
{
	show1_C();
 672:	0e 94 2c 03 	call	0x658	; 0x658 <show1_C>
	show7_A();
 676:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <show7_A>
}
 67a:	08 95       	ret

0000067c <show16>:
	show5_A();
}

void show16()
{
	show1_C();
 67c:	0e 94 2c 03 	call	0x658	; 0x658 <show1_C>
	show6_A();
 680:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <show6_A>
}
 684:	08 95       	ret

00000686 <show15>:
	show4_A();
}

void show15()
{
	show1_C();
 686:	0e 94 2c 03 	call	0x658	; 0x658 <show1_C>
	show5_A();
 68a:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <show5_A>
}
 68e:	08 95       	ret

00000690 <show14>:
	show3_A();
}

void show14()
{
	show1_C();
 690:	0e 94 2c 03 	call	0x658	; 0x658 <show1_C>
	show4_A();
 694:	0e 94 cd 02 	call	0x59a	; 0x59a <show4_A>
}
 698:	08 95       	ret

0000069a <show13>:
	show2_A();
}

void show13()
{
	show1_C();
 69a:	0e 94 2c 03 	call	0x658	; 0x658 <show1_C>
	show3_A();
 69e:	0e 94 c7 02 	call	0x58e	; 0x58e <show3_A>
}
 6a2:	08 95       	ret

000006a4 <show12>:
	show1_A();
}

void show12()
{
	show1_C();
 6a4:	0e 94 2c 03 	call	0x658	; 0x658 <show1_C>
	show2_A();
 6a8:	0e 94 c1 02 	call	0x582	; 0x582 <show2_A>
}
 6ac:	08 95       	ret

000006ae <show11>:
	show0_A();
}

void show11()
{
	show1_C();
 6ae:	0e 94 2c 03 	call	0x658	; 0x658 <show1_C>
	show1_A();
 6b2:	0e 94 be 02 	call	0x57c	; 0x57c <show1_A>
}
 6b6:	08 95       	ret

000006b8 <show10>:
	show9_A();
}

void show10()
{
	show1_C();
 6b8:	0e 94 2c 03 	call	0x658	; 0x658 <show1_C>
	show0_A();
 6bc:	0e 94 b7 02 	call	0x56e	; 0x56e <show0_A>
}
 6c0:	08 95       	ret

000006c2 <show2_C>:
	PORTD |= 1 << E2;
}

void show2_C()
{
	PORTD |= 1 << A2;
 6c2:	90 9a       	sbi	0x12, 0	; 18
	PORTD |= 1 << B2;
 6c4:	91 9a       	sbi	0x12, 1	; 18
	PORTD |= 1 << G2;
 6c6:	96 9a       	sbi	0x12, 6	; 18
	PORTD |= 1 << E2;
 6c8:	94 9a       	sbi	0x12, 4	; 18
	PORTD |= 1 << D2;
 6ca:	93 9a       	sbi	0x12, 3	; 18
}
 6cc:	08 95       	ret

000006ce <show29>:
	show8_A();
}

void show29()
{
	show2_C();
 6ce:	0e 94 61 03 	call	0x6c2	; 0x6c2 <show2_C>
	show9_A();
 6d2:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <show9_A>
}
 6d6:	08 95       	ret

000006d8 <show28>:
	show7_A();
}

void show28()
{
	show2_C();
 6d8:	0e 94 61 03 	call	0x6c2	; 0x6c2 <show2_C>
	show8_A();
 6dc:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <show8_A>
}
 6e0:	08 95       	ret

000006e2 <show27>:
	show6_A();
}

void show27()
{
	show2_C();
 6e2:	0e 94 61 03 	call	0x6c2	; 0x6c2 <show2_C>
	show7_A();
 6e6:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <show7_A>
}
 6ea:	08 95       	ret

000006ec <show26>:
	show5_A();
}

void show26()
{
	show2_C();
 6ec:	0e 94 61 03 	call	0x6c2	; 0x6c2 <show2_C>
	show6_A();
 6f0:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <show6_A>
}
 6f4:	08 95       	ret

000006f6 <show25>:
	show4_A();
}

void show25()
{
	show2_C();
 6f6:	0e 94 61 03 	call	0x6c2	; 0x6c2 <show2_C>
	show5_A();
 6fa:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <show5_A>
}
 6fe:	08 95       	ret

00000700 <show24>:
}


void show24()
{
	show2_C();
 700:	0e 94 61 03 	call	0x6c2	; 0x6c2 <show2_C>
	show4_A();
 704:	0e 94 cd 02 	call	0x59a	; 0x59a <show4_A>
}
 708:	08 95       	ret

0000070a <show23>:
	show2_A();
}

void show23()
{
	show2_C();
 70a:	0e 94 61 03 	call	0x6c2	; 0x6c2 <show2_C>
	show3_A();
 70e:	0e 94 c7 02 	call	0x58e	; 0x58e <show3_A>
}
 712:	08 95       	ret

00000714 <show22>:
	show1_A();
}

void show22()
{
	show2_C();
 714:	0e 94 61 03 	call	0x6c2	; 0x6c2 <show2_C>
	show2_A();
 718:	0e 94 c1 02 	call	0x582	; 0x582 <show2_A>
}
 71c:	08 95       	ret

0000071e <show21>:
	show0_A();
}

void show21()
{
	show2_C();
 71e:	0e 94 61 03 	call	0x6c2	; 0x6c2 <show2_C>
	show1_A();
 722:	0e 94 be 02 	call	0x57c	; 0x57c <show1_A>
}
 726:	08 95       	ret

00000728 <show20>:
	show9_A();
}

void show20()
{
	show2_C();
 728:	0e 94 61 03 	call	0x6c2	; 0x6c2 <show2_C>
	show0_A();
 72c:	0e 94 b7 02 	call	0x56e	; 0x56e <show0_A>
}
 730:	08 95       	ret

00000732 <show3_C>:
	PORTD |= 1 << D2;
}

void show3_C()
{
	PORTD |= 1 << A2;
 732:	90 9a       	sbi	0x12, 0	; 18
	PORTD |= 1 << B2;
 734:	91 9a       	sbi	0x12, 1	; 18
	PORTD |= 1 << G2;
 736:	96 9a       	sbi	0x12, 6	; 18
	PORTD |= 1 << C2;
 738:	92 9a       	sbi	0x12, 2	; 18
	PORTD |= 1 << D2;
 73a:	93 9a       	sbi	0x12, 3	; 18
}
 73c:	08 95       	ret

0000073e <show39>:
	show8_A();
}

void show39()
{
	show3_C();
 73e:	0e 94 99 03 	call	0x732	; 0x732 <show3_C>
	show9_A();
 742:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <show9_A>
}
 746:	08 95       	ret

00000748 <show38>:
	show7_A();
}

void show38()
{
	show3_C();
 748:	0e 94 99 03 	call	0x732	; 0x732 <show3_C>
	show8_A();
 74c:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <show8_A>
}
 750:	08 95       	ret

00000752 <show37>:
	show6_A();
}

void show37()
{
	show3_C();
 752:	0e 94 99 03 	call	0x732	; 0x732 <show3_C>
	show7_A();
 756:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <show7_A>
}
 75a:	08 95       	ret

0000075c <show36>:
	show5_A();
}

void show36()
{
	show3_C();
 75c:	0e 94 99 03 	call	0x732	; 0x732 <show3_C>
	show6_A();
 760:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <show6_A>
}
 764:	08 95       	ret

00000766 <show35>:
	show4_A();
}

void show35()
{
	show3_C();
 766:	0e 94 99 03 	call	0x732	; 0x732 <show3_C>
	show5_A();
 76a:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <show5_A>
}
 76e:	08 95       	ret

00000770 <show34>:
	show3_A();
}

void show34()
{
	show3_C();
 770:	0e 94 99 03 	call	0x732	; 0x732 <show3_C>
	show4_A();
 774:	0e 94 cd 02 	call	0x59a	; 0x59a <show4_A>
}
 778:	08 95       	ret

0000077a <show33>:
	show2_A();
}

void show33()
{
	show3_C();
 77a:	0e 94 99 03 	call	0x732	; 0x732 <show3_C>
	show3_A();
 77e:	0e 94 c7 02 	call	0x58e	; 0x58e <show3_A>
}
 782:	08 95       	ret

00000784 <show32>:
	show1_A();
}

void show32()
{
	show3_C();
 784:	0e 94 99 03 	call	0x732	; 0x732 <show3_C>
	show2_A();
 788:	0e 94 c1 02 	call	0x582	; 0x582 <show2_A>
}
 78c:	08 95       	ret

0000078e <show31>:
	show0_A();
}

void show31()
{
	show3_C();
 78e:	0e 94 99 03 	call	0x732	; 0x732 <show3_C>
	show1_A();
 792:	0e 94 be 02 	call	0x57c	; 0x57c <show1_A>
}
 796:	08 95       	ret

00000798 <show30>:
	show9_A();
}

void show30()
{
	show3_C();
 798:	0e 94 99 03 	call	0x732	; 0x732 <show3_C>
	show0_A();
 79c:	0e 94 b7 02 	call	0x56e	; 0x56e <show0_A>
}
 7a0:	08 95       	ret

000007a2 <show4_C>:
	PORTD |= 1 << D2;
}

void show4_C()
{
	PORTD |= 1 << F2;
 7a2:	95 9a       	sbi	0x12, 5	; 18
	PORTD |= 1 << G2;
 7a4:	96 9a       	sbi	0x12, 6	; 18
	PORTD |= 1 << B2;
 7a6:	91 9a       	sbi	0x12, 1	; 18
	PORTD |= 1 << B2;
 7a8:	91 9a       	sbi	0x12, 1	; 18
	PORTD |= 1 << C2;
 7aa:	92 9a       	sbi	0x12, 2	; 18
}
 7ac:	08 95       	ret

000007ae <show49>:
	show8_A();
}

void show49()
{
	show4_C();
 7ae:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <show4_C>
	show9_A();
 7b2:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <show9_A>
}
 7b6:	08 95       	ret

000007b8 <show48>:
	show7_A();
}

void show48()
{
	show4_C();
 7b8:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <show4_C>
	show8_A();
 7bc:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <show8_A>
}
 7c0:	08 95       	ret

000007c2 <show47>:
	show6_A();
}

void show47()
{
	show4_C();
 7c2:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <show4_C>
	show7_A();
 7c6:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <show7_A>
}
 7ca:	08 95       	ret

000007cc <show46>:
	show5_A();
}

void show46()
{
	show4_C();
 7cc:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <show4_C>
	show6_A();
 7d0:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <show6_A>
}
 7d4:	08 95       	ret

000007d6 <show45>:
	show4_A();
}

void show45()
{
	show4_C();
 7d6:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <show4_C>
	show5_A();
 7da:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <show5_A>
}
 7de:	08 95       	ret

000007e0 <show44>:
	show3_A();
}

void show44()
{
	show4_C();
 7e0:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <show4_C>
	show4_A();
 7e4:	0e 94 cd 02 	call	0x59a	; 0x59a <show4_A>
}
 7e8:	08 95       	ret

000007ea <show43>:
	show2_A();
}

void show43()
{
	show4_C();
 7ea:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <show4_C>
	show3_A();
 7ee:	0e 94 c7 02 	call	0x58e	; 0x58e <show3_A>
}
 7f2:	08 95       	ret

000007f4 <show42>:
	show1_A();
}

void show42()
{
	show4_C();
 7f4:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <show4_C>
	show2_A();
 7f8:	0e 94 c1 02 	call	0x582	; 0x582 <show2_A>
}
 7fc:	08 95       	ret

000007fe <show41>:
	show0_A();
}

void show41()
{
	show4_C();
 7fe:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <show4_C>
	show1_A();
 802:	0e 94 be 02 	call	0x57c	; 0x57c <show1_A>
}
 806:	08 95       	ret

00000808 <show40>:
	show9_A();
}

void show40()
{
	show4_C();
 808:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <show4_C>
	show0_A();
 80c:	0e 94 b7 02 	call	0x56e	; 0x56e <show0_A>
}
 810:	08 95       	ret

00000812 <show5_C>:
	PORTD |= 1 << C2;
}

void show5_C()
{
	PORTD |= 1 << A2;
 812:	90 9a       	sbi	0x12, 0	; 18
	PORTD |= 1 << F2;
 814:	95 9a       	sbi	0x12, 5	; 18
	PORTD |= 1 << G2;
 816:	96 9a       	sbi	0x12, 6	; 18
	PORTD |= 1 << C2;
 818:	92 9a       	sbi	0x12, 2	; 18
	PORTD |= 1 << D2;
 81a:	93 9a       	sbi	0x12, 3	; 18
}
 81c:	08 95       	ret

0000081e <show59>:
	show8_A();
}

void show59()
{
	show5_C();
 81e:	0e 94 09 04 	call	0x812	; 0x812 <show5_C>
	show9_A();
 822:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <show9_A>
}
 826:	08 95       	ret

00000828 <show58>:
	show7_A();
}

void show58()
{
	show5_C();
 828:	0e 94 09 04 	call	0x812	; 0x812 <show5_C>
	show8_A();
 82c:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <show8_A>
}
 830:	08 95       	ret

00000832 <show57>:
	show6_A();
}

void show57()
{
	show5_C();
 832:	0e 94 09 04 	call	0x812	; 0x812 <show5_C>
	show7_A();
 836:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <show7_A>
}
 83a:	08 95       	ret

0000083c <show56>:
	show5_A();
}

void show56()
{
	show5_C();
 83c:	0e 94 09 04 	call	0x812	; 0x812 <show5_C>
	show6_A();
 840:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <show6_A>
}
 844:	08 95       	ret

00000846 <show55>:
	show4_A();
}

void show55()
{
	show5_C();
 846:	0e 94 09 04 	call	0x812	; 0x812 <show5_C>
	show5_A();
 84a:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <show5_A>
}
 84e:	08 95       	ret

00000850 <show54>:
	show3_A();
}

void show54()
{
	show5_C();
 850:	0e 94 09 04 	call	0x812	; 0x812 <show5_C>
	show4_A();
 854:	0e 94 cd 02 	call	0x59a	; 0x59a <show4_A>
}
 858:	08 95       	ret

0000085a <show53>:
	show2_A();
}

void show53()
{
	show5_C();
 85a:	0e 94 09 04 	call	0x812	; 0x812 <show5_C>
	show3_A();
 85e:	0e 94 c7 02 	call	0x58e	; 0x58e <show3_A>
}
 862:	08 95       	ret

00000864 <show52>:
	show1_A();
}

void show52()
{
	show5_C();
 864:	0e 94 09 04 	call	0x812	; 0x812 <show5_C>
	show2_A();
 868:	0e 94 c1 02 	call	0x582	; 0x582 <show2_A>
}
 86c:	08 95       	ret

0000086e <show51>:
	show0_A();
}

void show51()
{
	show5_C();
 86e:	0e 94 09 04 	call	0x812	; 0x812 <show5_C>
	show1_A();
 872:	0e 94 be 02 	call	0x57c	; 0x57c <show1_A>
}
 876:	08 95       	ret

00000878 <show50>:
	show9_A();
}

void show50()
{
	show5_C();
 878:	0e 94 09 04 	call	0x812	; 0x812 <show5_C>
	show0_A();
 87c:	0e 94 b7 02 	call	0x56e	; 0x56e <show0_A>
}
 880:	08 95       	ret

00000882 <show6_C>:
	PORTD |= 1 << D2;
}

void show6_C()
{
	PORTD |= 1 << G2;
 882:	96 9a       	sbi	0x12, 6	; 18
	PORTD |= 1 << C2;
 884:	92 9a       	sbi	0x12, 2	; 18
	PORTD |= 1 << D2;
 886:	93 9a       	sbi	0x12, 3	; 18
	PORTD |= 1 << E2;
 888:	94 9a       	sbi	0x12, 4	; 18
	PORTD |= 1 << F2;
 88a:	95 9a       	sbi	0x12, 5	; 18
	PORTD |= 1 << A2;
 88c:	90 9a       	sbi	0x12, 0	; 18
}
 88e:	08 95       	ret

00000890 <show69>:
	show8_A();
}

void show69()
{
	show6_C();
 890:	0e 94 41 04 	call	0x882	; 0x882 <show6_C>
	show9_A();
 894:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <show9_A>
}
 898:	08 95       	ret

0000089a <show68>:
	show7_A();
}

void show68()
{
	show6_C();
 89a:	0e 94 41 04 	call	0x882	; 0x882 <show6_C>
	show8_A();
 89e:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <show8_A>
}
 8a2:	08 95       	ret

000008a4 <show67>:
	show6_A();
}

void show67()
{
	show6_C();
 8a4:	0e 94 41 04 	call	0x882	; 0x882 <show6_C>
	show7_A();
 8a8:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <show7_A>
}
 8ac:	08 95       	ret

000008ae <show66>:
	show5_A();
}

void show66()
{
	show6_C();
 8ae:	0e 94 41 04 	call	0x882	; 0x882 <show6_C>
	show6_A();
 8b2:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <show6_A>
}
 8b6:	08 95       	ret

000008b8 <show65>:
	show4_A();
}

void show65()
{
	show6_C();
 8b8:	0e 94 41 04 	call	0x882	; 0x882 <show6_C>
	show5_A();
 8bc:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <show5_A>
}
 8c0:	08 95       	ret

000008c2 <show64>:
	show3_A();
}

void show64()
{
	show6_C();
 8c2:	0e 94 41 04 	call	0x882	; 0x882 <show6_C>
	show4_A();
 8c6:	0e 94 cd 02 	call	0x59a	; 0x59a <show4_A>
}
 8ca:	08 95       	ret

000008cc <show63>:
	show2_A();
}

void show63()
{
	show6_C();
 8cc:	0e 94 41 04 	call	0x882	; 0x882 <show6_C>
	show3_A();
 8d0:	0e 94 c7 02 	call	0x58e	; 0x58e <show3_A>
}
 8d4:	08 95       	ret

000008d6 <show62>:
	show1_A();
}

void show62()
{
	show6_C();
 8d6:	0e 94 41 04 	call	0x882	; 0x882 <show6_C>
	show2_A();
 8da:	0e 94 c1 02 	call	0x582	; 0x582 <show2_A>
}
 8de:	08 95       	ret

000008e0 <show61>:
	show0_A();
}

void show61()
{
	show6_C();
 8e0:	0e 94 41 04 	call	0x882	; 0x882 <show6_C>
	show1_A();
 8e4:	0e 94 be 02 	call	0x57c	; 0x57c <show1_A>
}
 8e8:	08 95       	ret

000008ea <show60>:
	show9_A();
}

void show60()
{
	show6_C();
 8ea:	0e 94 41 04 	call	0x882	; 0x882 <show6_C>
	show0_A();
 8ee:	0e 94 b7 02 	call	0x56e	; 0x56e <show0_A>
}
 8f2:	08 95       	ret

000008f4 <show7_C>:
	PORTD |= 1 << A2;
}

void show7_C()
{
	PORTD |= 1 << A2;
 8f4:	90 9a       	sbi	0x12, 0	; 18
	PORTD |= 1 << B2;
 8f6:	91 9a       	sbi	0x12, 1	; 18
	PORTD |= 1 << C2;
 8f8:	92 9a       	sbi	0x12, 2	; 18
}
 8fa:	08 95       	ret

000008fc <show79>:
	show8_A();
}

void show79()
{
	show7_C();
 8fc:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <show7_C>
	show9_A();
 900:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <show9_A>
}
 904:	08 95       	ret

00000906 <show78>:
	show7_A();
}

void show78()
{
	show7_C();
 906:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <show7_C>
	show8_A();
 90a:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <show8_A>
}
 90e:	08 95       	ret

00000910 <show77>:
	show6_A();
}

void show77()
{
	show7_C();
 910:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <show7_C>
	show7_A();
 914:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <show7_A>
}
 918:	08 95       	ret

0000091a <show76>:
	show5_A();
}

void show76()
{
	show7_C();
 91a:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <show7_C>
	show6_A();
 91e:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <show6_A>
}
 922:	08 95       	ret

00000924 <show75>:
	show4_A();
}

void show75()
{
	show7_C();
 924:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <show7_C>
	show5_A();
 928:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <show5_A>
}
 92c:	08 95       	ret

0000092e <show74>:
	show3_A();
}

void show74()
{
	show7_C();
 92e:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <show7_C>
	show4_A();
 932:	0e 94 cd 02 	call	0x59a	; 0x59a <show4_A>
}
 936:	08 95       	ret

00000938 <show73>:
	show2_A();
}

void show73()
{
	show7_C();
 938:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <show7_C>
	show3_A();
 93c:	0e 94 c7 02 	call	0x58e	; 0x58e <show3_A>
}
 940:	08 95       	ret

00000942 <show72>:
	show1_A();
}

void show72()
{
	show7_C();
 942:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <show7_C>
	show2_A();
 946:	0e 94 c1 02 	call	0x582	; 0x582 <show2_A>
}
 94a:	08 95       	ret

0000094c <show71>:
	show0_A();
}

void show71()
{
	show7_C();
 94c:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <show7_C>
	show1_A();
 950:	0e 94 be 02 	call	0x57c	; 0x57c <show1_A>
}
 954:	08 95       	ret

00000956 <show70>:
	show9_A();
}

void show70()
{
	show7_C();
 956:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <show7_C>
	show0_A();
 95a:	0e 94 b7 02 	call	0x56e	; 0x56e <show0_A>
}
 95e:	08 95       	ret

00000960 <show8_C>:
	PORTD |= 1 << C2;
}

void show8_C()
{
	PORTD |= 1 << A2;
 960:	90 9a       	sbi	0x12, 0	; 18
	PORTD |= 1 << B2;
 962:	91 9a       	sbi	0x12, 1	; 18
	PORTD |= 1 << C2;
 964:	92 9a       	sbi	0x12, 2	; 18
	PORTD |= 1 << D2;
 966:	93 9a       	sbi	0x12, 3	; 18
	PORTD |= 1 << E2;
 968:	94 9a       	sbi	0x12, 4	; 18
	PORTD |= 1 << F2;
 96a:	95 9a       	sbi	0x12, 5	; 18
	PORTD |= 1 << G2;
 96c:	96 9a       	sbi	0x12, 6	; 18
}
 96e:	08 95       	ret

00000970 <show89>:
	show8_A();
}

void show89()
{
	show8_C();
 970:	0e 94 b0 04 	call	0x960	; 0x960 <show8_C>
	show9_A();
 974:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <show9_A>
}
 978:	08 95       	ret

0000097a <show88>:
	show7_A();
}

void show88()
{
	show8_C();
 97a:	0e 94 b0 04 	call	0x960	; 0x960 <show8_C>
	show8_A();
 97e:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <show8_A>
}
 982:	08 95       	ret

00000984 <show87>:
	show6_A();
}

void show87()
{
	show8_C();
 984:	0e 94 b0 04 	call	0x960	; 0x960 <show8_C>
	show7_A();
 988:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <show7_A>
}
 98c:	08 95       	ret

0000098e <show86>:
	show5_A();
}

void show86()
{
	show8_C();
 98e:	0e 94 b0 04 	call	0x960	; 0x960 <show8_C>
	show6_A();
 992:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <show6_A>
}
 996:	08 95       	ret

00000998 <show85>:
	show4_A();
}

void show85()
{
	show8_C();
 998:	0e 94 b0 04 	call	0x960	; 0x960 <show8_C>
	show5_A();
 99c:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <show5_A>
}
 9a0:	08 95       	ret

000009a2 <show84>:
	show3_A();
}

void show84()
{
	show8_C();
 9a2:	0e 94 b0 04 	call	0x960	; 0x960 <show8_C>
	show4_A();
 9a6:	0e 94 cd 02 	call	0x59a	; 0x59a <show4_A>
}
 9aa:	08 95       	ret

000009ac <show83>:
	show2_A();
}

void show83()
{
	show8_C();
 9ac:	0e 94 b0 04 	call	0x960	; 0x960 <show8_C>
	show3_A();
 9b0:	0e 94 c7 02 	call	0x58e	; 0x58e <show3_A>
}
 9b4:	08 95       	ret

000009b6 <show82>:
	show1_A();
}

void show82()
{
	show8_C();
 9b6:	0e 94 b0 04 	call	0x960	; 0x960 <show8_C>
	show2_A();
 9ba:	0e 94 c1 02 	call	0x582	; 0x582 <show2_A>
}
 9be:	08 95       	ret

000009c0 <show81>:
	show0_A();
}

void show81()
{
	show8_C();
 9c0:	0e 94 b0 04 	call	0x960	; 0x960 <show8_C>
	show1_A();
 9c4:	0e 94 be 02 	call	0x57c	; 0x57c <show1_A>
}
 9c8:	08 95       	ret

000009ca <show80>:
	show9_A();
}

void show80()
{
	show8_C();
 9ca:	0e 94 b0 04 	call	0x960	; 0x960 <show8_C>
	show0_A();
 9ce:	0e 94 b7 02 	call	0x56e	; 0x56e <show0_A>
}
 9d2:	08 95       	ret

000009d4 <show9_C>:
	PORTD |= 1 << G2;
}

void show9_C()
{
	PORTD |= 1 << A2;
 9d4:	90 9a       	sbi	0x12, 0	; 18
	PORTD |= 1 << B2;
 9d6:	91 9a       	sbi	0x12, 1	; 18
	PORTD |= 1 << G2;
 9d8:	96 9a       	sbi	0x12, 6	; 18
	PORTD |= 1 << F2;
 9da:	95 9a       	sbi	0x12, 5	; 18
	PORTD |= 1 << C2;
 9dc:	92 9a       	sbi	0x12, 2	; 18
	PORTD |= 1 << D2;
 9de:	93 9a       	sbi	0x12, 3	; 18
}
 9e0:	08 95       	ret

000009e2 <show99>:
	show8_A();
}

void show99()
{
	show9_C();
 9e2:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <show9_C>
	show9_A();
 9e6:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <show9_A>
}
 9ea:	08 95       	ret

000009ec <show98>:
	show7_A();
}

void show98()
{
	show9_C();
 9ec:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <show9_C>
	show8_A();
 9f0:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <show8_A>
}
 9f4:	08 95       	ret

000009f6 <show97>:
	show6_A();
}

void show97()
{
	show9_C();
 9f6:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <show9_C>
	show7_A();
 9fa:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <show7_A>
}
 9fe:	08 95       	ret

00000a00 <show96>:
	show5_A();
}

void show96()
{
	show9_C();
 a00:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <show9_C>
	show6_A();
 a04:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <show6_A>
}
 a08:	08 95       	ret

00000a0a <show95>:
	show4_A();
}

void show95()
{
	show9_C();
 a0a:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <show9_C>
	show5_A();
 a0e:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <show5_A>
}
 a12:	08 95       	ret

00000a14 <show94>:
	show3_A();
}

void show94()
{
	show9_C();
 a14:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <show9_C>
	show4_A();
 a18:	0e 94 cd 02 	call	0x59a	; 0x59a <show4_A>
}
 a1c:	08 95       	ret

00000a1e <show93>:
	show2_A();
}

void show93()
{
	show9_C();
 a1e:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <show9_C>
	show3_A();
 a22:	0e 94 c7 02 	call	0x58e	; 0x58e <show3_A>
}
 a26:	08 95       	ret

00000a28 <show92>:
	show1_A();
}

void show92()
{
	show9_C();
 a28:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <show9_C>
	show2_A();
 a2c:	0e 94 c1 02 	call	0x582	; 0x582 <show2_A>
}
 a30:	08 95       	ret

00000a32 <show91>:
	show0_A();
}

void show91()
{
	show9_C();
 a32:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <show9_C>
	show1_A();
 a36:	0e 94 be 02 	call	0x57c	; 0x57c <show1_A>
}
 a3a:	08 95       	ret

00000a3c <show90>:
	show9_A();
}

void show90()
{
	show9_C();
 a3c:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <show9_C>
	show0_A();
 a40:	0e 94 b7 02 	call	0x56e	; 0x56e <show0_A>
}
 a44:	08 95       	ret

00000a46 <init>:
	show9_A();
}

void init()
{
	DDRA |= 1 << A1;
 a46:	d0 9a       	sbi	0x1a, 0	; 26
	DDRA |= 1 << B1;
 a48:	d1 9a       	sbi	0x1a, 1	; 26
	DDRA |= 1 << C1;
 a4a:	d2 9a       	sbi	0x1a, 2	; 26
	DDRA |= 1 << D1;
 a4c:	d3 9a       	sbi	0x1a, 3	; 26
	DDRA |= 1 << E1;
 a4e:	d4 9a       	sbi	0x1a, 4	; 26
	DDRA |= 1 << F1;
 a50:	d5 9a       	sbi	0x1a, 5	; 26
	DDRA |= 1 << G1;
 a52:	d6 9a       	sbi	0x1a, 6	; 26
	
	DDRD |= 1 << A2;
 a54:	88 9a       	sbi	0x11, 0	; 17
	DDRD |= 1 << B2;
 a56:	89 9a       	sbi	0x11, 1	; 17
	DDRD |= 1 << C2;
 a58:	8a 9a       	sbi	0x11, 2	; 17
	DDRD |= 1 << D2;
 a5a:	8b 9a       	sbi	0x11, 3	; 17
	DDRD |= 1 << E2;
 a5c:	8c 9a       	sbi	0x11, 4	; 17
	DDRD |= 1 << F2;
 a5e:	8d 9a       	sbi	0x11, 5	; 17
	DDRD |= 1 << G2;
 a60:	8e 9a       	sbi	0x11, 6	; 17
	
	DDRB |= 1 << OUTPUT;
 a62:	bb 9a       	sbi	0x17, 3	; 23
	
	
	DDRB &= ~(1 << INPUT1);
 a64:	b8 98       	cbi	0x17, 0	; 23
	DDRB &= ~(1 << INPUT2);
 a66:	b9 98       	cbi	0x17, 1	; 23
	DDRB &= ~(1 << START);
 a68:	ba 98       	cbi	0x17, 2	; 23
	
	PORTB |= 1 << INPUT1;
 a6a:	c0 9a       	sbi	0x18, 0	; 24
	PORTB |= 1 << INPUT2;
 a6c:	c1 9a       	sbi	0x18, 1	; 24
	PORTB |= 1 << START;
 a6e:	c2 9a       	sbi	0x18, 2	; 24
}
 a70:	08 95       	ret

00000a72 <main>:

int main(void)
{
	
	init();
 a72:	0e 94 23 05 	call	0xa46	; 0xa46 <init>
	refresh(counter);
 a76:	80 91 60 00 	lds	r24, 0x0060
 a7a:	90 91 61 00 	lds	r25, 0x0061
 a7e:	0e 94 bf 00 	call	0x17e	; 0x17e <refresh>
    while(1)
    {
		
		ScanButton1();
 a82:	0e 94 01 02 	call	0x402	; 0x402 <ScanButton1>
		ScanButton2();
 a86:	0e 94 38 02 	call	0x470	; 0x470 <ScanButton2>
		ScanButton3();
 a8a:	0e 94 6f 02 	call	0x4de	; 0x4de <ScanButton3>
 a8e:	f9 cf       	rjmp	.-14     	; 0xa82 <main+0x10>

00000a90 <_exit>:
 a90:	f8 94       	cli

00000a92 <__stop_program>:
 a92:	ff cf       	rjmp	.-2      	; 0xa92 <__stop_program>
