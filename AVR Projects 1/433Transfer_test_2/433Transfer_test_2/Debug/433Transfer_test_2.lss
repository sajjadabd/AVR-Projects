
433Transfer_test_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000060e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000018  00800060  00800060  00000682  2**0
                  ALLOC
  2 .stab         000006cc  00000000  00000000  00000684  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000097  00000000  00000000  00000d50  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000020  00000000  00000000  00000de7  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000149  00000000  00000000  00000e07  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000078b  00000000  00000000  00000f50  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000025c  00000000  00000000  000016db  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006bf  00000000  00000000  00001937  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d0  00000000  00000000  00001ff8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000001e4  00000000  00000000  000020c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000191  00000000  00000000  000022ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 00000038  00000000  00000000  0000243d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a8 37       	cpi	r26, 0x78	; 120
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <main>
  74:	0c 94 05 03 	jmp	0x60a	; 0x60a <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <plusAddress>:
uint16_t address_1 = 0x00;
uint16_t data_1 = 0x00;

void plusAddress()
{
	address_1 = address_1 + 0x01;
  7c:	80 91 74 00 	lds	r24, 0x0074
  80:	90 91 75 00 	lds	r25, 0x0075
  84:	01 96       	adiw	r24, 0x01	; 1
  86:	90 93 75 00 	sts	0x0075, r25
  8a:	80 93 74 00 	sts	0x0074, r24
}
  8e:	08 95       	ret

00000090 <plusData>:

void plusData()
{
	data_1 = data_1 + 0x01;
  90:	80 91 76 00 	lds	r24, 0x0076
  94:	90 91 77 00 	lds	r25, 0x0077
  98:	01 96       	adiw	r24, 0x01	; 1
  9a:	90 93 77 00 	sts	0x0077, r25
  9e:	80 93 76 00 	sts	0x0076, r24
}
  a2:	08 95       	ret

000000a4 <ScanButton5>:



void ScanButton5()
{
  a4:	cf 93       	push	r28
  a6:	df 93       	push	r29
	if(bit_is_clear(PINB, 5))
  a8:	b5 99       	sbic	0x16, 5	; 22
  aa:	14 c0       	rjmp	.+40     	; 0xd4 <ScanButton5+0x30>
	{
		if(pressed5 >= 1000)
  ac:	80 91 68 00 	lds	r24, 0x0068
  b0:	90 91 69 00 	lds	r25, 0x0069
  b4:	23 e0       	ldi	r18, 0x03	; 3
  b6:	88 3e       	cpi	r24, 0xE8	; 232
  b8:	92 07       	cpc	r25, r18
  ba:	3c f0       	brlt	.+14     	; 0xca <ScanButton5+0x26>
		{
			pressed5 = 500;
  bc:	84 ef       	ldi	r24, 0xF4	; 244
  be:	91 e0       	ldi	r25, 0x01	; 1
  c0:	90 93 69 00 	sts	0x0069, r25
  c4:	80 93 68 00 	sts	0x0068, r24
  c8:	2d c0       	rjmp	.+90     	; 0x124 <ScanButton5+0x80>
		}
		else
		{
			pressed5++;
  ca:	01 96       	adiw	r24, 0x01	; 1
  cc:	90 93 69 00 	sts	0x0069, r25
  d0:	80 93 68 00 	sts	0x0068, r24
		}							
	}	
	
	
	if(pressed5 == 0)
  d4:	80 91 68 00 	lds	r24, 0x0068
  d8:	90 91 69 00 	lds	r25, 0x0069
  dc:	00 97       	sbiw	r24, 0x00	; 0
  de:	c9 f4       	brne	.+50     	; 0x112 <ScanButton5+0x6e>
	{
		if( on5 == 1 )
  e0:	80 91 72 00 	lds	r24, 0x0072
  e4:	90 91 73 00 	lds	r25, 0x0073
  e8:	81 30       	cpi	r24, 0x01	; 1
  ea:	91 05       	cpc	r25, r1
  ec:	91 f4       	brne	.+36     	; 0x112 <ScanButton5+0x6e>
  ee:	ca e0       	ldi	r28, 0x0A	; 10
  f0:	d0 e0       	ldi	r29, 0x00	; 0
		{
			for(int k=0;k<10;k++)
			{
				//Send_Packet(RADDR, LEDOFF4);
				Send_Packet(address_1, data_1);
  f2:	60 91 76 00 	lds	r22, 0x0076
  f6:	70 91 77 00 	lds	r23, 0x0077
  fa:	80 91 74 00 	lds	r24, 0x0074
  fe:	90 91 75 00 	lds	r25, 0x0075
 102:	0e 94 b8 02 	call	0x570	; 0x570 <Send_Packet>
 106:	21 97       	sbiw	r28, 0x01	; 1
	
	if(pressed5 == 0)
	{
		if( on5 == 1 )
		{
			for(int k=0;k<10;k++)
 108:	a1 f7       	brne	.-24     	; 0xf2 <ScanButton5+0x4e>
			{
				//Send_Packet(RADDR, LEDOFF4);
				Send_Packet(address_1, data_1);
			}
			on5 = 0;
 10a:	10 92 73 00 	sts	0x0073, r1
 10e:	10 92 72 00 	sts	0x0072, r1
		}
	}		
		
		
	if(pressed5 >= 400)
 112:	80 91 68 00 	lds	r24, 0x0068
 116:	90 91 69 00 	lds	r25, 0x0069
 11a:	21 e0       	ldi	r18, 0x01	; 1
 11c:	80 39       	cpi	r24, 0x90	; 144
 11e:	92 07       	cpc	r25, r18
 120:	0c f4       	brge	.+2      	; 0x124 <ScanButton5+0x80>
 122:	3f c0       	rjmp	.+126    	; 0x1a2 <ScanButton5+0xfe>
	{
		if(bit_is_clear(PINB,5))
 124:	b5 99       	sbic	0x16, 5	; 22
 126:	1e c0       	rjmp	.+60     	; 0x164 <ScanButton5+0xc0>
		{
			//Do Nothing
			if( on5 == 0 || on5 == 1 )
 128:	80 91 72 00 	lds	r24, 0x0072
 12c:	90 91 73 00 	lds	r25, 0x0073
 130:	82 30       	cpi	r24, 0x02	; 2
 132:	91 05       	cpc	r25, r1
 134:	b0 f5       	brcc	.+108    	; 0x1a2 <ScanButton5+0xfe>
 136:	c0 e0       	ldi	r28, 0x00	; 0
 138:	d0 e0       	ldi	r29, 0x00	; 0
			{
				for(int k=0;k<10;k++)
				{
					//Send_Packet(RADDR, LEDON4);
					Send_Packet(address_1, data_1);
 13a:	60 91 76 00 	lds	r22, 0x0076
 13e:	70 91 77 00 	lds	r23, 0x0077
 142:	80 91 74 00 	lds	r24, 0x0074
 146:	90 91 75 00 	lds	r25, 0x0075
 14a:	0e 94 b8 02 	call	0x570	; 0x570 <Send_Packet>
		if(bit_is_clear(PINB,5))
		{
			//Do Nothing
			if( on5 == 0 || on5 == 1 )
			{
				for(int k=0;k<10;k++)
 14e:	21 96       	adiw	r28, 0x01	; 1
 150:	ca 30       	cpi	r28, 0x0A	; 10
 152:	d1 05       	cpc	r29, r1
 154:	91 f7       	brne	.-28     	; 0x13a <ScanButton5+0x96>
				{
					//Send_Packet(RADDR, LEDON4);
					Send_Packet(address_1, data_1);
				}
				on5 = 1;
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	90 93 73 00 	sts	0x0073, r25
 15e:	80 93 72 00 	sts	0x0072, r24
 162:	1f c0       	rjmp	.+62     	; 0x1a2 <ScanButton5+0xfe>
		}
		else
		{
			//PORTB ^= 1 << PINB0;
			
			if( on5 == 1 )
 164:	80 91 72 00 	lds	r24, 0x0072
 168:	90 91 73 00 	lds	r25, 0x0073
 16c:	81 30       	cpi	r24, 0x01	; 1
 16e:	91 05       	cpc	r25, r1
 170:	a1 f4       	brne	.+40     	; 0x19a <ScanButton5+0xf6>
 172:	c0 e0       	ldi	r28, 0x00	; 0
 174:	d0 e0       	ldi	r29, 0x00	; 0
			{
				for(int k=0;k<10;k++)
				{
					//Send_Packet(RADDR, LEDOFF4);
					Send_Packet(address_1, data_1);
 176:	60 91 76 00 	lds	r22, 0x0076
 17a:	70 91 77 00 	lds	r23, 0x0077
 17e:	80 91 74 00 	lds	r24, 0x0074
 182:	90 91 75 00 	lds	r25, 0x0075
 186:	0e 94 b8 02 	call	0x570	; 0x570 <Send_Packet>
		{
			//PORTB ^= 1 << PINB0;
			
			if( on5 == 1 )
			{
				for(int k=0;k<10;k++)
 18a:	21 96       	adiw	r28, 0x01	; 1
 18c:	ca 30       	cpi	r28, 0x0A	; 10
 18e:	d1 05       	cpc	r29, r1
 190:	91 f7       	brne	.-28     	; 0x176 <ScanButton5+0xd2>
				{
					//Send_Packet(RADDR, LEDOFF4);
					Send_Packet(address_1, data_1);
				}
				on5 = 0;
 192:	10 92 73 00 	sts	0x0073, r1
 196:	10 92 72 00 	sts	0x0072, r1
			}
			
			
			pressed5 = 0;					
 19a:	10 92 69 00 	sts	0x0069, r1
 19e:	10 92 68 00 	sts	0x0068, r1
		}
	}
	
	plusAddress();
 1a2:	0e 94 3e 00 	call	0x7c	; 0x7c <plusAddress>
	plusData();
 1a6:	0e 94 48 00 	call	0x90	; 0x90 <plusData>
	
}
 1aa:	df 91       	pop	r29
 1ac:	cf 91       	pop	r28
 1ae:	08 95       	ret

000001b0 <ScanButton4>:



void ScanButton4()
{
 1b0:	cf 93       	push	r28
 1b2:	df 93       	push	r29
	
	if(bit_is_clear(PINB, 4))
 1b4:	b4 99       	sbic	0x16, 4	; 22
 1b6:	14 c0       	rjmp	.+40     	; 0x1e0 <ScanButton4+0x30>
	{
		if(pressed4 >= 1000)
 1b8:	80 91 66 00 	lds	r24, 0x0066
 1bc:	90 91 67 00 	lds	r25, 0x0067
 1c0:	23 e0       	ldi	r18, 0x03	; 3
 1c2:	88 3e       	cpi	r24, 0xE8	; 232
 1c4:	92 07       	cpc	r25, r18
 1c6:	3c f0       	brlt	.+14     	; 0x1d6 <ScanButton4+0x26>
		{
			pressed4 = 500;
 1c8:	84 ef       	ldi	r24, 0xF4	; 244
 1ca:	91 e0       	ldi	r25, 0x01	; 1
 1cc:	90 93 67 00 	sts	0x0067, r25
 1d0:	80 93 66 00 	sts	0x0066, r24
 1d4:	28 c0       	rjmp	.+80     	; 0x226 <ScanButton4+0x76>
		}
		else
		{
			pressed4++;
 1d6:	01 96       	adiw	r24, 0x01	; 1
 1d8:	90 93 67 00 	sts	0x0067, r25
 1dc:	80 93 66 00 	sts	0x0066, r24
		}							
	}	
	
	
	if(pressed4 == 0)
 1e0:	80 91 66 00 	lds	r24, 0x0066
 1e4:	90 91 67 00 	lds	r25, 0x0067
 1e8:	00 97       	sbiw	r24, 0x00	; 0
 1ea:	a9 f4       	brne	.+42     	; 0x216 <ScanButton4+0x66>
	{
		if( on4 == 1 )
 1ec:	80 91 70 00 	lds	r24, 0x0070
 1f0:	90 91 71 00 	lds	r25, 0x0071
 1f4:	81 30       	cpi	r24, 0x01	; 1
 1f6:	91 05       	cpc	r25, r1
 1f8:	71 f4       	brne	.+28     	; 0x216 <ScanButton4+0x66>
 1fa:	ca e0       	ldi	r28, 0x0A	; 10
 1fc:	d0 e0       	ldi	r29, 0x00	; 0
		{
			for(int k=0;k<10;k++)
				Send_Packet(RADDR, LEDOFF4);
 1fe:	84 e4       	ldi	r24, 0x44	; 68
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	69 e9       	ldi	r22, 0x99	; 153
 204:	70 e0       	ldi	r23, 0x00	; 0
 206:	0e 94 b8 02 	call	0x570	; 0x570 <Send_Packet>
 20a:	21 97       	sbiw	r28, 0x01	; 1
	
	if(pressed4 == 0)
	{
		if( on4 == 1 )
		{
			for(int k=0;k<10;k++)
 20c:	c1 f7       	brne	.-16     	; 0x1fe <ScanButton4+0x4e>
				Send_Packet(RADDR, LEDOFF4);
			on4 = 0;
 20e:	10 92 71 00 	sts	0x0071, r1
 212:	10 92 70 00 	sts	0x0070, r1
		}
	}		
		
		
	if(pressed4 >= 400)
 216:	80 91 66 00 	lds	r24, 0x0066
 21a:	90 91 67 00 	lds	r25, 0x0067
 21e:	21 e0       	ldi	r18, 0x01	; 1
 220:	80 39       	cpi	r24, 0x90	; 144
 222:	92 07       	cpc	r25, r18
 224:	bc f1       	brlt	.+110    	; 0x294 <ScanButton4+0xe4>
	{
		if(bit_is_clear(PINB,4))
 226:	b4 99       	sbic	0x16, 4	; 22
 228:	1a c0       	rjmp	.+52     	; 0x25e <ScanButton4+0xae>
		{
			//Do Nothing
			if( on4 == 0 || on4 == 1 )
 22a:	80 91 70 00 	lds	r24, 0x0070
 22e:	90 91 71 00 	lds	r25, 0x0071
 232:	82 30       	cpi	r24, 0x02	; 2
 234:	91 05       	cpc	r25, r1
 236:	70 f5       	brcc	.+92     	; 0x294 <ScanButton4+0xe4>
 238:	c0 e0       	ldi	r28, 0x00	; 0
 23a:	d0 e0       	ldi	r29, 0x00	; 0
			{
				for(int k=0;k<10;k++)
					Send_Packet(RADDR, LEDON4);
 23c:	84 e4       	ldi	r24, 0x44	; 68
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	67 e7       	ldi	r22, 0x77	; 119
 242:	70 e0       	ldi	r23, 0x00	; 0
 244:	0e 94 b8 02 	call	0x570	; 0x570 <Send_Packet>
		if(bit_is_clear(PINB,4))
		{
			//Do Nothing
			if( on4 == 0 || on4 == 1 )
			{
				for(int k=0;k<10;k++)
 248:	21 96       	adiw	r28, 0x01	; 1
 24a:	ca 30       	cpi	r28, 0x0A	; 10
 24c:	d1 05       	cpc	r29, r1
 24e:	b1 f7       	brne	.-20     	; 0x23c <ScanButton4+0x8c>
					Send_Packet(RADDR, LEDON4);
				on4 = 1;
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	90 93 71 00 	sts	0x0071, r25
 258:	80 93 70 00 	sts	0x0070, r24
 25c:	1b c0       	rjmp	.+54     	; 0x294 <ScanButton4+0xe4>
		}
		else
		{
			//PORTB ^= 1 << PINB0;
			
			if( on4 == 1 )
 25e:	80 91 70 00 	lds	r24, 0x0070
 262:	90 91 71 00 	lds	r25, 0x0071
 266:	81 30       	cpi	r24, 0x01	; 1
 268:	91 05       	cpc	r25, r1
 26a:	81 f4       	brne	.+32     	; 0x28c <ScanButton4+0xdc>
 26c:	c0 e0       	ldi	r28, 0x00	; 0
 26e:	d0 e0       	ldi	r29, 0x00	; 0
			{
				for(int k=0;k<10;k++)
					Send_Packet(RADDR, LEDOFF4);
 270:	84 e4       	ldi	r24, 0x44	; 68
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	69 e9       	ldi	r22, 0x99	; 153
 276:	70 e0       	ldi	r23, 0x00	; 0
 278:	0e 94 b8 02 	call	0x570	; 0x570 <Send_Packet>
		{
			//PORTB ^= 1 << PINB0;
			
			if( on4 == 1 )
			{
				for(int k=0;k<10;k++)
 27c:	21 96       	adiw	r28, 0x01	; 1
 27e:	ca 30       	cpi	r28, 0x0A	; 10
 280:	d1 05       	cpc	r29, r1
 282:	b1 f7       	brne	.-20     	; 0x270 <ScanButton4+0xc0>
					Send_Packet(RADDR, LEDOFF4);
				on4 = 0;
 284:	10 92 71 00 	sts	0x0071, r1
 288:	10 92 70 00 	sts	0x0070, r1
			}
			
			
			pressed4 = 0;					
 28c:	10 92 67 00 	sts	0x0067, r1
 290:	10 92 66 00 	sts	0x0066, r1
		}
	}
	
	
}
 294:	df 91       	pop	r29
 296:	cf 91       	pop	r28
 298:	08 95       	ret

0000029a <ScanButton3>:


void ScanButton3()
{
 29a:	cf 93       	push	r28
 29c:	df 93       	push	r29
	if(bit_is_clear(PINB, 3))
 29e:	b3 99       	sbic	0x16, 3	; 22
 2a0:	14 c0       	rjmp	.+40     	; 0x2ca <ScanButton3+0x30>
	{
		if(pressed3 >= 1000)
 2a2:	80 91 64 00 	lds	r24, 0x0064
 2a6:	90 91 65 00 	lds	r25, 0x0065
 2aa:	23 e0       	ldi	r18, 0x03	; 3
 2ac:	88 3e       	cpi	r24, 0xE8	; 232
 2ae:	92 07       	cpc	r25, r18
 2b0:	3c f0       	brlt	.+14     	; 0x2c0 <ScanButton3+0x26>
		{
			pressed3 = 500;
 2b2:	84 ef       	ldi	r24, 0xF4	; 244
 2b4:	91 e0       	ldi	r25, 0x01	; 1
 2b6:	90 93 65 00 	sts	0x0065, r25
 2ba:	80 93 64 00 	sts	0x0064, r24
 2be:	28 c0       	rjmp	.+80     	; 0x310 <ScanButton3+0x76>
		}
		else
		{
			pressed3++;
 2c0:	01 96       	adiw	r24, 0x01	; 1
 2c2:	90 93 65 00 	sts	0x0065, r25
 2c6:	80 93 64 00 	sts	0x0064, r24
		}							
	}	
	
	if(pressed3 == 0)
 2ca:	80 91 64 00 	lds	r24, 0x0064
 2ce:	90 91 65 00 	lds	r25, 0x0065
 2d2:	00 97       	sbiw	r24, 0x00	; 0
 2d4:	a9 f4       	brne	.+42     	; 0x300 <ScanButton3+0x66>
	{
		if( on3 == 1 )
 2d6:	80 91 6e 00 	lds	r24, 0x006E
 2da:	90 91 6f 00 	lds	r25, 0x006F
 2de:	81 30       	cpi	r24, 0x01	; 1
 2e0:	91 05       	cpc	r25, r1
 2e2:	71 f4       	brne	.+28     	; 0x300 <ScanButton3+0x66>
 2e4:	ca e0       	ldi	r28, 0x0A	; 10
 2e6:	d0 e0       	ldi	r29, 0x00	; 0
		{
			for(int k=0;k<10;k++)
				Send_Packet(RADDR, LEDOFF3);
 2e8:	84 e4       	ldi	r24, 0x44	; 68
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	68 e8       	ldi	r22, 0x88	; 136
 2ee:	70 e0       	ldi	r23, 0x00	; 0
 2f0:	0e 94 b8 02 	call	0x570	; 0x570 <Send_Packet>
 2f4:	21 97       	sbiw	r28, 0x01	; 1
	
	if(pressed3 == 0)
	{
		if( on3 == 1 )
		{
			for(int k=0;k<10;k++)
 2f6:	c1 f7       	brne	.-16     	; 0x2e8 <ScanButton3+0x4e>
				Send_Packet(RADDR, LEDOFF3);
			on3 = 0;
 2f8:	10 92 6f 00 	sts	0x006F, r1
 2fc:	10 92 6e 00 	sts	0x006E, r1
		}
	}	
		
	if(pressed3 >= 400)
 300:	80 91 64 00 	lds	r24, 0x0064
 304:	90 91 65 00 	lds	r25, 0x0065
 308:	21 e0       	ldi	r18, 0x01	; 1
 30a:	80 39       	cpi	r24, 0x90	; 144
 30c:	92 07       	cpc	r25, r18
 30e:	bc f1       	brlt	.+110    	; 0x37e <ScanButton3+0xe4>
	{
		if(bit_is_clear(PINB,3))
 310:	b3 99       	sbic	0x16, 3	; 22
 312:	1a c0       	rjmp	.+52     	; 0x348 <ScanButton3+0xae>
		{
			//Do Nothing
			if( on3 == 0 || on3 == 1 )
 314:	80 91 6e 00 	lds	r24, 0x006E
 318:	90 91 6f 00 	lds	r25, 0x006F
 31c:	82 30       	cpi	r24, 0x02	; 2
 31e:	91 05       	cpc	r25, r1
 320:	70 f5       	brcc	.+92     	; 0x37e <ScanButton3+0xe4>
 322:	c0 e0       	ldi	r28, 0x00	; 0
 324:	d0 e0       	ldi	r29, 0x00	; 0
			{
				for(int k=0;k<10;k++)
					Send_Packet(RADDR, LEDON3);
 326:	84 e4       	ldi	r24, 0x44	; 68
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	66 e6       	ldi	r22, 0x66	; 102
 32c:	70 e0       	ldi	r23, 0x00	; 0
 32e:	0e 94 b8 02 	call	0x570	; 0x570 <Send_Packet>
		if(bit_is_clear(PINB,3))
		{
			//Do Nothing
			if( on3 == 0 || on3 == 1 )
			{
				for(int k=0;k<10;k++)
 332:	21 96       	adiw	r28, 0x01	; 1
 334:	ca 30       	cpi	r28, 0x0A	; 10
 336:	d1 05       	cpc	r29, r1
 338:	b1 f7       	brne	.-20     	; 0x326 <ScanButton3+0x8c>
					Send_Packet(RADDR, LEDON3);
				on3 = 1;
 33a:	81 e0       	ldi	r24, 0x01	; 1
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	90 93 6f 00 	sts	0x006F, r25
 342:	80 93 6e 00 	sts	0x006E, r24
 346:	1b c0       	rjmp	.+54     	; 0x37e <ScanButton3+0xe4>
		}
		else
		{
			//PORTB ^= 1 << PINB0;
			
			if( on3 == 1 )
 348:	80 91 6e 00 	lds	r24, 0x006E
 34c:	90 91 6f 00 	lds	r25, 0x006F
 350:	81 30       	cpi	r24, 0x01	; 1
 352:	91 05       	cpc	r25, r1
 354:	81 f4       	brne	.+32     	; 0x376 <ScanButton3+0xdc>
 356:	c0 e0       	ldi	r28, 0x00	; 0
 358:	d0 e0       	ldi	r29, 0x00	; 0
			{
				for(int k=0;k<10;k++)
					Send_Packet(RADDR, LEDOFF3);
 35a:	84 e4       	ldi	r24, 0x44	; 68
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	68 e8       	ldi	r22, 0x88	; 136
 360:	70 e0       	ldi	r23, 0x00	; 0
 362:	0e 94 b8 02 	call	0x570	; 0x570 <Send_Packet>
		{
			//PORTB ^= 1 << PINB0;
			
			if( on3 == 1 )
			{
				for(int k=0;k<10;k++)
 366:	21 96       	adiw	r28, 0x01	; 1
 368:	ca 30       	cpi	r28, 0x0A	; 10
 36a:	d1 05       	cpc	r29, r1
 36c:	b1 f7       	brne	.-20     	; 0x35a <ScanButton3+0xc0>
					Send_Packet(RADDR, LEDOFF3);
				on3 = 0;
 36e:	10 92 6f 00 	sts	0x006F, r1
 372:	10 92 6e 00 	sts	0x006E, r1
			}
			
			pressed3 = 0;					
 376:	10 92 65 00 	sts	0x0065, r1
 37a:	10 92 64 00 	sts	0x0064, r1
		}
	}
	
	
}
 37e:	df 91       	pop	r29
 380:	cf 91       	pop	r28
 382:	08 95       	ret

00000384 <ScanButton2>:



void ScanButton2()
{
 384:	cf 93       	push	r28
 386:	df 93       	push	r29
	if(bit_is_clear(PINB, 2))
 388:	b2 99       	sbic	0x16, 2	; 22
 38a:	14 c0       	rjmp	.+40     	; 0x3b4 <ScanButton2+0x30>
	{
		if(pressed2 >= 1000)
 38c:	80 91 62 00 	lds	r24, 0x0062
 390:	90 91 63 00 	lds	r25, 0x0063
 394:	23 e0       	ldi	r18, 0x03	; 3
 396:	88 3e       	cpi	r24, 0xE8	; 232
 398:	92 07       	cpc	r25, r18
 39a:	3c f0       	brlt	.+14     	; 0x3aa <ScanButton2+0x26>
		{
			pressed2 = 500;
 39c:	84 ef       	ldi	r24, 0xF4	; 244
 39e:	91 e0       	ldi	r25, 0x01	; 1
 3a0:	90 93 63 00 	sts	0x0063, r25
 3a4:	80 93 62 00 	sts	0x0062, r24
 3a8:	28 c0       	rjmp	.+80     	; 0x3fa <ScanButton2+0x76>
		}
		else
		{
			pressed2++;
 3aa:	01 96       	adiw	r24, 0x01	; 1
 3ac:	90 93 63 00 	sts	0x0063, r25
 3b0:	80 93 62 00 	sts	0x0062, r24
		}							
	}	
	
	if(pressed2 == 0)
 3b4:	80 91 62 00 	lds	r24, 0x0062
 3b8:	90 91 63 00 	lds	r25, 0x0063
 3bc:	00 97       	sbiw	r24, 0x00	; 0
 3be:	a9 f4       	brne	.+42     	; 0x3ea <ScanButton2+0x66>
	{
		if( on2 == 1 )
 3c0:	80 91 6c 00 	lds	r24, 0x006C
 3c4:	90 91 6d 00 	lds	r25, 0x006D
 3c8:	81 30       	cpi	r24, 0x01	; 1
 3ca:	91 05       	cpc	r25, r1
 3cc:	71 f4       	brne	.+28     	; 0x3ea <ScanButton2+0x66>
 3ce:	ca e0       	ldi	r28, 0x0A	; 10
 3d0:	d0 e0       	ldi	r29, 0x00	; 0
		{
			for(int k=0;k<10;k++)
				Send_Packet(RADDR, LEDOFF2);
 3d2:	84 e4       	ldi	r24, 0x44	; 68
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	65 e5       	ldi	r22, 0x55	; 85
 3d8:	70 e0       	ldi	r23, 0x00	; 0
 3da:	0e 94 b8 02 	call	0x570	; 0x570 <Send_Packet>
 3de:	21 97       	sbiw	r28, 0x01	; 1
	
	if(pressed2 == 0)
	{
		if( on2 == 1 )
		{
			for(int k=0;k<10;k++)
 3e0:	c1 f7       	brne	.-16     	; 0x3d2 <ScanButton2+0x4e>
				Send_Packet(RADDR, LEDOFF2);
			on2 = 0;
 3e2:	10 92 6d 00 	sts	0x006D, r1
 3e6:	10 92 6c 00 	sts	0x006C, r1
		}
	}	
		
	if(pressed2 >= 400)
 3ea:	80 91 62 00 	lds	r24, 0x0062
 3ee:	90 91 63 00 	lds	r25, 0x0063
 3f2:	21 e0       	ldi	r18, 0x01	; 1
 3f4:	80 39       	cpi	r24, 0x90	; 144
 3f6:	92 07       	cpc	r25, r18
 3f8:	bc f1       	brlt	.+110    	; 0x468 <__stack+0x9>
	{
		if(bit_is_clear(PINB,2))
 3fa:	b2 99       	sbic	0x16, 2	; 22
 3fc:	1a c0       	rjmp	.+52     	; 0x432 <ScanButton2+0xae>
		{
			//Do Nothing
			if( on2 == 0 || on2 == 1 )
 3fe:	80 91 6c 00 	lds	r24, 0x006C
 402:	90 91 6d 00 	lds	r25, 0x006D
 406:	82 30       	cpi	r24, 0x02	; 2
 408:	91 05       	cpc	r25, r1
 40a:	70 f5       	brcc	.+92     	; 0x468 <__stack+0x9>
 40c:	c0 e0       	ldi	r28, 0x00	; 0
 40e:	d0 e0       	ldi	r29, 0x00	; 0
			{
				for(int k=0;k<10;k++)
					Send_Packet(RADDR, LEDON2);
 410:	84 e4       	ldi	r24, 0x44	; 68
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	62 e2       	ldi	r22, 0x22	; 34
 416:	70 e0       	ldi	r23, 0x00	; 0
 418:	0e 94 b8 02 	call	0x570	; 0x570 <Send_Packet>
		if(bit_is_clear(PINB,2))
		{
			//Do Nothing
			if( on2 == 0 || on2 == 1 )
			{
				for(int k=0;k<10;k++)
 41c:	21 96       	adiw	r28, 0x01	; 1
 41e:	ca 30       	cpi	r28, 0x0A	; 10
 420:	d1 05       	cpc	r29, r1
 422:	b1 f7       	brne	.-20     	; 0x410 <ScanButton2+0x8c>
					Send_Packet(RADDR, LEDON2);
				on2 = 1;
 424:	81 e0       	ldi	r24, 0x01	; 1
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	90 93 6d 00 	sts	0x006D, r25
 42c:	80 93 6c 00 	sts	0x006C, r24
 430:	1b c0       	rjmp	.+54     	; 0x468 <__stack+0x9>
		}
		else
		{
			//PORTB ^= 1 << PINB0;
			
			if( on2 == 1 )
 432:	80 91 6c 00 	lds	r24, 0x006C
 436:	90 91 6d 00 	lds	r25, 0x006D
 43a:	81 30       	cpi	r24, 0x01	; 1
 43c:	91 05       	cpc	r25, r1
 43e:	81 f4       	brne	.+32     	; 0x460 <__stack+0x1>
 440:	c0 e0       	ldi	r28, 0x00	; 0
 442:	d0 e0       	ldi	r29, 0x00	; 0
			{
				for(int k=0;k<10;k++)
					Send_Packet(RADDR, LEDOFF2);
 444:	84 e4       	ldi	r24, 0x44	; 68
 446:	90 e0       	ldi	r25, 0x00	; 0
 448:	65 e5       	ldi	r22, 0x55	; 85
 44a:	70 e0       	ldi	r23, 0x00	; 0
 44c:	0e 94 b8 02 	call	0x570	; 0x570 <Send_Packet>
		{
			//PORTB ^= 1 << PINB0;
			
			if( on2 == 1 )
			{
				for(int k=0;k<10;k++)
 450:	21 96       	adiw	r28, 0x01	; 1
 452:	ca 30       	cpi	r28, 0x0A	; 10
 454:	d1 05       	cpc	r29, r1
 456:	b1 f7       	brne	.-20     	; 0x444 <ScanButton2+0xc0>
					Send_Packet(RADDR, LEDOFF2);
				on2 = 0;
 458:	10 92 6d 00 	sts	0x006D, r1
 45c:	10 92 6c 00 	sts	0x006C, r1
			}
			
			pressed2 = 0;					
 460:	10 92 63 00 	sts	0x0063, r1
 464:	10 92 62 00 	sts	0x0062, r1
		}
	}
	
	
}
 468:	df 91       	pop	r29
 46a:	cf 91       	pop	r28
 46c:	08 95       	ret

0000046e <ScanButton1>:

void ScanButton1()
{
 46e:	cf 93       	push	r28
 470:	df 93       	push	r29
	
	if(bit_is_clear(PINB, 1))
 472:	b1 99       	sbic	0x16, 1	; 22
 474:	14 c0       	rjmp	.+40     	; 0x49e <ScanButton1+0x30>
	{
		if(pressed1 >= 1000)
 476:	80 91 60 00 	lds	r24, 0x0060
 47a:	90 91 61 00 	lds	r25, 0x0061
 47e:	23 e0       	ldi	r18, 0x03	; 3
 480:	88 3e       	cpi	r24, 0xE8	; 232
 482:	92 07       	cpc	r25, r18
 484:	3c f0       	brlt	.+14     	; 0x494 <ScanButton1+0x26>
		{
			pressed1 = 500;
 486:	84 ef       	ldi	r24, 0xF4	; 244
 488:	91 e0       	ldi	r25, 0x01	; 1
 48a:	90 93 61 00 	sts	0x0061, r25
 48e:	80 93 60 00 	sts	0x0060, r24
 492:	28 c0       	rjmp	.+80     	; 0x4e4 <ScanButton1+0x76>
		}
		else
		{
			pressed1++;
 494:	01 96       	adiw	r24, 0x01	; 1
 496:	90 93 61 00 	sts	0x0061, r25
 49a:	80 93 60 00 	sts	0x0060, r24
		}							
	}
	
	if(pressed1 == 0)
 49e:	80 91 60 00 	lds	r24, 0x0060
 4a2:	90 91 61 00 	lds	r25, 0x0061
 4a6:	00 97       	sbiw	r24, 0x00	; 0
 4a8:	a9 f4       	brne	.+42     	; 0x4d4 <ScanButton1+0x66>
	{
		if( on1 == 1 )
 4aa:	80 91 6a 00 	lds	r24, 0x006A
 4ae:	90 91 6b 00 	lds	r25, 0x006B
 4b2:	81 30       	cpi	r24, 0x01	; 1
 4b4:	91 05       	cpc	r25, r1
 4b6:	71 f4       	brne	.+28     	; 0x4d4 <ScanButton1+0x66>
 4b8:	ca e0       	ldi	r28, 0x0A	; 10
 4ba:	d0 e0       	ldi	r29, 0x00	; 0
		{
			for(int k=0;k<10;k++)
				Send_Packet(RADDR, LEDOFF1);
 4bc:	84 e4       	ldi	r24, 0x44	; 68
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	63 e3       	ldi	r22, 0x33	; 51
 4c2:	70 e0       	ldi	r23, 0x00	; 0
 4c4:	0e 94 b8 02 	call	0x570	; 0x570 <Send_Packet>
 4c8:	21 97       	sbiw	r28, 0x01	; 1
	
	if(pressed1 == 0)
	{
		if( on1 == 1 )
		{
			for(int k=0;k<10;k++)
 4ca:	c1 f7       	brne	.-16     	; 0x4bc <ScanButton1+0x4e>
				Send_Packet(RADDR, LEDOFF1);
			on1 = 0;
 4cc:	10 92 6b 00 	sts	0x006B, r1
 4d0:	10 92 6a 00 	sts	0x006A, r1
		}
	}		
		
	if(pressed1 >= 400)
 4d4:	80 91 60 00 	lds	r24, 0x0060
 4d8:	90 91 61 00 	lds	r25, 0x0061
 4dc:	21 e0       	ldi	r18, 0x01	; 1
 4de:	80 39       	cpi	r24, 0x90	; 144
 4e0:	92 07       	cpc	r25, r18
 4e2:	bc f1       	brlt	.+110    	; 0x552 <ScanButton1+0xe4>
	{
		if(bit_is_clear(PINB,1))
 4e4:	b1 99       	sbic	0x16, 1	; 22
 4e6:	1a c0       	rjmp	.+52     	; 0x51c <ScanButton1+0xae>
		{
			//Do Nothing
			if( on1 == 0 || on1 == 1 )
 4e8:	80 91 6a 00 	lds	r24, 0x006A
 4ec:	90 91 6b 00 	lds	r25, 0x006B
 4f0:	82 30       	cpi	r24, 0x02	; 2
 4f2:	91 05       	cpc	r25, r1
 4f4:	70 f5       	brcc	.+92     	; 0x552 <ScanButton1+0xe4>
 4f6:	c0 e0       	ldi	r28, 0x00	; 0
 4f8:	d0 e0       	ldi	r29, 0x00	; 0
			{
				for(int k=0;k<10;k++)
					Send_Packet(RADDR, LEDON1);
 4fa:	84 e4       	ldi	r24, 0x44	; 68
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	61 e1       	ldi	r22, 0x11	; 17
 500:	70 e0       	ldi	r23, 0x00	; 0
 502:	0e 94 b8 02 	call	0x570	; 0x570 <Send_Packet>
		if(bit_is_clear(PINB,1))
		{
			//Do Nothing
			if( on1 == 0 || on1 == 1 )
			{
				for(int k=0;k<10;k++)
 506:	21 96       	adiw	r28, 0x01	; 1
 508:	ca 30       	cpi	r28, 0x0A	; 10
 50a:	d1 05       	cpc	r29, r1
 50c:	b1 f7       	brne	.-20     	; 0x4fa <ScanButton1+0x8c>
					Send_Packet(RADDR, LEDON1);
				on1 = 1;
 50e:	81 e0       	ldi	r24, 0x01	; 1
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	90 93 6b 00 	sts	0x006B, r25
 516:	80 93 6a 00 	sts	0x006A, r24
 51a:	1b c0       	rjmp	.+54     	; 0x552 <ScanButton1+0xe4>
		}
		else
		{
			//PORTB ^= 1 << PINB0;
			
			if( on1 == 1 )
 51c:	80 91 6a 00 	lds	r24, 0x006A
 520:	90 91 6b 00 	lds	r25, 0x006B
 524:	81 30       	cpi	r24, 0x01	; 1
 526:	91 05       	cpc	r25, r1
 528:	81 f4       	brne	.+32     	; 0x54a <ScanButton1+0xdc>
 52a:	c0 e0       	ldi	r28, 0x00	; 0
 52c:	d0 e0       	ldi	r29, 0x00	; 0
			{
				for(int k=0;k<10;k++)
					Send_Packet(RADDR, LEDOFF1);
 52e:	84 e4       	ldi	r24, 0x44	; 68
 530:	90 e0       	ldi	r25, 0x00	; 0
 532:	63 e3       	ldi	r22, 0x33	; 51
 534:	70 e0       	ldi	r23, 0x00	; 0
 536:	0e 94 b8 02 	call	0x570	; 0x570 <Send_Packet>
		{
			//PORTB ^= 1 << PINB0;
			
			if( on1 == 1 )
			{
				for(int k=0;k<10;k++)
 53a:	21 96       	adiw	r28, 0x01	; 1
 53c:	ca 30       	cpi	r28, 0x0A	; 10
 53e:	d1 05       	cpc	r29, r1
 540:	b1 f7       	brne	.-20     	; 0x52e <ScanButton1+0xc0>
					Send_Packet(RADDR, LEDOFF1);
				on1 = 0;
 542:	10 92 6b 00 	sts	0x006B, r1
 546:	10 92 6a 00 	sts	0x006A, r1
			}
			
			pressed1 = 0;					
 54a:	10 92 61 00 	sts	0x0061, r1
 54e:	10 92 60 00 	sts	0x0060, r1
		}
	}
	
}
 552:	df 91       	pop	r29
 554:	cf 91       	pop	r28
 556:	08 95       	ret

00000558 <USART_Init>:


void USART_Init(void)
{
	//Set baud rate
	UBRRL=(uint8_t)UBRRVAL;		//low byte
 558:	83 e3       	ldi	r24, 0x33	; 51
 55a:	89 b9       	out	0x09, r24	; 9
	UBRRH=(UBRRVAL>>8);	//high byte
 55c:	10 bc       	out	0x20, r1	; 32
	//Set data frame format: asynchronous mode,no parity, 1 stop bit, 8 bit size
	UCSRC=(1<<URSEL)|(0<<UMSEL)|(0<<UPM1)|(0<<UPM0)|
 55e:	86 e8       	ldi	r24, 0x86	; 134
 560:	80 bd       	out	0x20, r24	; 32
		(0<<USBS)|(0<<UCSZ2)|(1<<UCSZ1)|(1<<UCSZ0);	
	//Enable Transmitter and Receiver and Interrupt on receive complete
	UCSRB=(1<<TXEN);
 562:	88 e0       	ldi	r24, 0x08	; 8
 564:	8a b9       	out	0x0a, r24	; 10
}
 566:	08 95       	ret

00000568 <USART_vSendByte>:
void USART_vSendByte(uint8_t u8Data)
{
    // Wait if a byte is being transmitted
    while((UCSRA&(1<<UDRE)) == 0);
 568:	5d 9b       	sbis	0x0b, 5	; 11
 56a:	fe cf       	rjmp	.-4      	; 0x568 <USART_vSendByte>
    // Transmit data
    UDR = u8Data; 
 56c:	8c b9       	out	0x0c, r24	; 12
}
 56e:	08 95       	ret

00000570 <Send_Packet>:
void Send_Packet(uint8_t addr, uint8_t cmd)
{
 570:	0f 93       	push	r16
 572:	1f 93       	push	r17
 574:	18 2f       	mov	r17, r24
 576:	06 2f       	mov	r16, r22
	USART_vSendByte(SYNC);//send synchro byte	
 578:	8a ea       	ldi	r24, 0xAA	; 170
 57a:	0e 94 b4 02 	call	0x568	; 0x568 <USART_vSendByte>
	USART_vSendByte(addr);//send receiver address
 57e:	81 2f       	mov	r24, r17
 580:	0e 94 b4 02 	call	0x568	; 0x568 <USART_vSendByte>
	USART_vSendByte(cmd);//send increment command
 584:	80 2f       	mov	r24, r16
 586:	0e 94 b4 02 	call	0x568	; 0x568 <USART_vSendByte>
	USART_vSendByte((addr+cmd));//send checksum
 58a:	80 2f       	mov	r24, r16
 58c:	81 0f       	add	r24, r17
 58e:	0e 94 b4 02 	call	0x568	; 0x568 <USART_vSendByte>
}
 592:	1f 91       	pop	r17
 594:	0f 91       	pop	r16
 596:	08 95       	ret

00000598 <delayms>:
void delayms(uint8_t t)//delay in ms
{
	uint8_t i;
	for(i=0;i<t;i++)
 598:	88 23       	and	r24, r24
 59a:	51 f0       	breq	.+20     	; 0x5b0 <delayms+0x18>
 59c:	90 e0       	ldi	r25, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 59e:	e9 ef       	ldi	r30, 0xF9	; 249
 5a0:	f0 e0       	ldi	r31, 0x00	; 0
 5a2:	31 97       	sbiw	r30, 0x01	; 1
 5a4:	f1 f7       	brne	.-4      	; 0x5a2 <delayms+0xa>
 5a6:	00 c0       	rjmp	.+0      	; 0x5a8 <delayms+0x10>
 5a8:	00 00       	nop
 5aa:	9f 5f       	subi	r25, 0xFF	; 255
 5ac:	98 17       	cp	r25, r24
 5ae:	b8 f3       	brcs	.-18     	; 0x59e <delayms+0x6>
 5b0:	08 95       	ret

000005b2 <main>:
		_delay_ms(1);
}
int main(void)
{
	USART_Init();
 5b2:	0e 94 ac 02 	call	0x558	; 0x558 <USART_Init>
	
	DDRB |= 1 << PINB0;//on the turning microcontroller on
 5b6:	b8 9a       	sbi	0x17, 0	; 23
	
	
	DDRB &= ~(1 << PINB1);
 5b8:	b9 98       	cbi	0x17, 1	; 23
	DDRB &= ~(1 << PINB2);
 5ba:	ba 98       	cbi	0x17, 2	; 23
	DDRB &= ~(1 << PINB3);
 5bc:	bb 98       	cbi	0x17, 3	; 23
	DDRB &= ~(1 << PINB4);
 5be:	bc 98       	cbi	0x17, 4	; 23
	DDRB &= ~(1 << PINB5);
 5c0:	bd 98       	cbi	0x17, 5	; 23
	
	PORTB |= 1 << PINB1;
 5c2:	c1 9a       	sbi	0x18, 1	; 24
	PORTB |= 1 << PINB2;
 5c4:	c2 9a       	sbi	0x18, 2	; 24
	PORTB |= 1 << PINB3;
 5c6:	c3 9a       	sbi	0x18, 3	; 24
	PORTB |= 1 << PINB4;
 5c8:	c4 9a       	sbi	0x18, 4	; 24
	PORTB |= 1 << PINB5;
 5ca:	c5 9a       	sbi	0x18, 5	; 24
	
	PORTB |= 1 << PINB0;
 5cc:	c0 9a       	sbi	0x18, 0	; 24
 5ce:	8f e3       	ldi	r24, 0x3F	; 63
 5d0:	9d e0       	ldi	r25, 0x0D	; 13
 5d2:	a3 e0       	ldi	r26, 0x03	; 3
 5d4:	81 50       	subi	r24, 0x01	; 1
 5d6:	90 40       	sbci	r25, 0x00	; 0
 5d8:	a0 40       	sbci	r26, 0x00	; 0
 5da:	e1 f7       	brne	.-8      	; 0x5d4 <main+0x22>
 5dc:	00 c0       	rjmp	.+0      	; 0x5de <main+0x2c>
 5de:	00 00       	nop
	_delay_ms(1000);
	PORTB &= ~(1<<PINB0);
 5e0:	c0 98       	cbi	0x18, 0	; 24
 5e2:	8f e3       	ldi	r24, 0x3F	; 63
 5e4:	9d e0       	ldi	r25, 0x0D	; 13
 5e6:	a3 e0       	ldi	r26, 0x03	; 3
 5e8:	81 50       	subi	r24, 0x01	; 1
 5ea:	90 40       	sbci	r25, 0x00	; 0
 5ec:	a0 40       	sbci	r26, 0x00	; 0
 5ee:	e1 f7       	brne	.-8      	; 0x5e8 <main+0x36>
 5f0:	00 c0       	rjmp	.+0      	; 0x5f2 <main+0x40>
 5f2:	00 00       	nop
	_delay_ms(1000);
	
	while(1)
	{
		
		ScanButton1();
 5f4:	0e 94 37 02 	call	0x46e	; 0x46e <ScanButton1>
		ScanButton2();
 5f8:	0e 94 c2 01 	call	0x384	; 0x384 <ScanButton2>
		ScanButton3();
 5fc:	0e 94 4d 01 	call	0x29a	; 0x29a <ScanButton3>
		ScanButton4();
 600:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <ScanButton4>
		ScanButton5();
 604:	0e 94 52 00 	call	0xa4	; 0xa4 <ScanButton5>
 608:	f5 cf       	rjmp	.-22     	; 0x5f4 <main+0x42>

0000060a <_exit>:
 60a:	f8 94       	cli

0000060c <__stop_program>:
 60c:	ff cf       	rjmp	.-2      	; 0x60c <__stop_program>
