
433Transfer_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004d2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000010  00800060  00800060  00000546  2**0
                  ALLOC
  2 .stab         000006cc  00000000  00000000  00000548  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000097  00000000  00000000  00000c14  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000020  00000000  00000000  00000cab  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000000ee  00000000  00000000  00000ccb  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000634  00000000  00000000  00000db9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000227  00000000  00000000  000013ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005af  00000000  00000000  00001614  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a0  00000000  00000000  00001bc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000001a3  00000000  00000000  00001c64  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000161  00000000  00000000  00001e07  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 00000038  00000000  00000000  00001f68  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a0 37       	cpi	r26, 0x70	; 112
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 3f 02 	call	0x47e	; 0x47e <main>
  74:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <ScanButton4>:

int on3 = 0;
int on4 = 0;

void ScanButton4()
{
  7c:	cf 93       	push	r28
  7e:	df 93       	push	r29
	
	if(bit_is_clear(PINB, 4))
  80:	b4 99       	sbic	0x16, 4	; 22
  82:	14 c0       	rjmp	.+40     	; 0xac <ScanButton4+0x30>
	{
		if(pressed4 >= 1000)
  84:	80 91 66 00 	lds	r24, 0x0066
  88:	90 91 67 00 	lds	r25, 0x0067
  8c:	23 e0       	ldi	r18, 0x03	; 3
  8e:	88 3e       	cpi	r24, 0xE8	; 232
  90:	92 07       	cpc	r25, r18
  92:	3c f0       	brlt	.+14     	; 0xa2 <ScanButton4+0x26>
		{
			pressed4 = 500;
  94:	84 ef       	ldi	r24, 0xF4	; 244
  96:	91 e0       	ldi	r25, 0x01	; 1
  98:	90 93 67 00 	sts	0x0067, r25
  9c:	80 93 66 00 	sts	0x0066, r24
  a0:	28 c0       	rjmp	.+80     	; 0xf2 <ScanButton4+0x76>
		}
		else
		{
			pressed4++;
  a2:	01 96       	adiw	r24, 0x01	; 1
  a4:	90 93 67 00 	sts	0x0067, r25
  a8:	80 93 66 00 	sts	0x0066, r24
		}							
	}	
	
	
	if(pressed4 == 0)
  ac:	80 91 66 00 	lds	r24, 0x0066
  b0:	90 91 67 00 	lds	r25, 0x0067
  b4:	00 97       	sbiw	r24, 0x00	; 0
  b6:	a9 f4       	brne	.+42     	; 0xe2 <ScanButton4+0x66>
	{
		if( on4 == 1 )
  b8:	80 91 6e 00 	lds	r24, 0x006E
  bc:	90 91 6f 00 	lds	r25, 0x006F
  c0:	81 30       	cpi	r24, 0x01	; 1
  c2:	91 05       	cpc	r25, r1
  c4:	71 f4       	brne	.+28     	; 0xe2 <ScanButton4+0x66>
  c6:	ca e0       	ldi	r28, 0x0A	; 10
  c8:	d0 e0       	ldi	r29, 0x00	; 0
		{
			for(int k=0;k<10;k++)
				Send_Packet(RADDR, LEDOFF4);
  ca:	84 e4       	ldi	r24, 0x44	; 68
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	69 e9       	ldi	r22, 0x99	; 153
  d0:	70 e0       	ldi	r23, 0x00	; 0
  d2:	0e 94 1e 02 	call	0x43c	; 0x43c <Send_Packet>
  d6:	21 97       	sbiw	r28, 0x01	; 1
	
	if(pressed4 == 0)
	{
		if( on4 == 1 )
		{
			for(int k=0;k<10;k++)
  d8:	c1 f7       	brne	.-16     	; 0xca <ScanButton4+0x4e>
				Send_Packet(RADDR, LEDOFF4);
			on4 = 0;
  da:	10 92 6f 00 	sts	0x006F, r1
  de:	10 92 6e 00 	sts	0x006E, r1
		}
	}		
		
		
	if(pressed4 >= 400)
  e2:	80 91 66 00 	lds	r24, 0x0066
  e6:	90 91 67 00 	lds	r25, 0x0067
  ea:	21 e0       	ldi	r18, 0x01	; 1
  ec:	80 39       	cpi	r24, 0x90	; 144
  ee:	92 07       	cpc	r25, r18
  f0:	bc f1       	brlt	.+110    	; 0x160 <ScanButton4+0xe4>
	{
		if(bit_is_clear(PINB,4))
  f2:	b4 99       	sbic	0x16, 4	; 22
  f4:	1a c0       	rjmp	.+52     	; 0x12a <ScanButton4+0xae>
		{
			//Do Nothing
			if( on4 == 0 || on4 == 1 )
  f6:	80 91 6e 00 	lds	r24, 0x006E
  fa:	90 91 6f 00 	lds	r25, 0x006F
  fe:	82 30       	cpi	r24, 0x02	; 2
 100:	91 05       	cpc	r25, r1
 102:	70 f5       	brcc	.+92     	; 0x160 <ScanButton4+0xe4>
 104:	c0 e0       	ldi	r28, 0x00	; 0
 106:	d0 e0       	ldi	r29, 0x00	; 0
			{
				for(int k=0;k<10;k++)
					Send_Packet(RADDR, LEDON4);
 108:	84 e4       	ldi	r24, 0x44	; 68
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	67 e7       	ldi	r22, 0x77	; 119
 10e:	70 e0       	ldi	r23, 0x00	; 0
 110:	0e 94 1e 02 	call	0x43c	; 0x43c <Send_Packet>
		if(bit_is_clear(PINB,4))
		{
			//Do Nothing
			if( on4 == 0 || on4 == 1 )
			{
				for(int k=0;k<10;k++)
 114:	21 96       	adiw	r28, 0x01	; 1
 116:	ca 30       	cpi	r28, 0x0A	; 10
 118:	d1 05       	cpc	r29, r1
 11a:	b1 f7       	brne	.-20     	; 0x108 <ScanButton4+0x8c>
					Send_Packet(RADDR, LEDON4);
				on4 = 1;
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	90 93 6f 00 	sts	0x006F, r25
 124:	80 93 6e 00 	sts	0x006E, r24
 128:	1b c0       	rjmp	.+54     	; 0x160 <ScanButton4+0xe4>
		}
		else
		{
			//PORTB ^= 1 << PINB0;
			
			if( on4 == 1 )
 12a:	80 91 6e 00 	lds	r24, 0x006E
 12e:	90 91 6f 00 	lds	r25, 0x006F
 132:	81 30       	cpi	r24, 0x01	; 1
 134:	91 05       	cpc	r25, r1
 136:	81 f4       	brne	.+32     	; 0x158 <ScanButton4+0xdc>
 138:	c0 e0       	ldi	r28, 0x00	; 0
 13a:	d0 e0       	ldi	r29, 0x00	; 0
			{
				for(int k=0;k<10;k++)
					Send_Packet(RADDR, LEDOFF4);
 13c:	84 e4       	ldi	r24, 0x44	; 68
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	69 e9       	ldi	r22, 0x99	; 153
 142:	70 e0       	ldi	r23, 0x00	; 0
 144:	0e 94 1e 02 	call	0x43c	; 0x43c <Send_Packet>
		{
			//PORTB ^= 1 << PINB0;
			
			if( on4 == 1 )
			{
				for(int k=0;k<10;k++)
 148:	21 96       	adiw	r28, 0x01	; 1
 14a:	ca 30       	cpi	r28, 0x0A	; 10
 14c:	d1 05       	cpc	r29, r1
 14e:	b1 f7       	brne	.-20     	; 0x13c <ScanButton4+0xc0>
					Send_Packet(RADDR, LEDOFF4);
				on4 = 0;
 150:	10 92 6f 00 	sts	0x006F, r1
 154:	10 92 6e 00 	sts	0x006E, r1
			}
			
			
			pressed4 = 0;					
 158:	10 92 67 00 	sts	0x0067, r1
 15c:	10 92 66 00 	sts	0x0066, r1
		}
	}
	
	
}
 160:	df 91       	pop	r29
 162:	cf 91       	pop	r28
 164:	08 95       	ret

00000166 <ScanButton3>:


void ScanButton3()
{
 166:	cf 93       	push	r28
 168:	df 93       	push	r29
	if(bit_is_clear(PINB, 3))
 16a:	b3 99       	sbic	0x16, 3	; 22
 16c:	14 c0       	rjmp	.+40     	; 0x196 <ScanButton3+0x30>
	{
		if(pressed3 >= 1000)
 16e:	80 91 64 00 	lds	r24, 0x0064
 172:	90 91 65 00 	lds	r25, 0x0065
 176:	23 e0       	ldi	r18, 0x03	; 3
 178:	88 3e       	cpi	r24, 0xE8	; 232
 17a:	92 07       	cpc	r25, r18
 17c:	3c f0       	brlt	.+14     	; 0x18c <ScanButton3+0x26>
		{
			pressed3 = 500;
 17e:	84 ef       	ldi	r24, 0xF4	; 244
 180:	91 e0       	ldi	r25, 0x01	; 1
 182:	90 93 65 00 	sts	0x0065, r25
 186:	80 93 64 00 	sts	0x0064, r24
 18a:	28 c0       	rjmp	.+80     	; 0x1dc <ScanButton3+0x76>
		}
		else
		{
			pressed3++;
 18c:	01 96       	adiw	r24, 0x01	; 1
 18e:	90 93 65 00 	sts	0x0065, r25
 192:	80 93 64 00 	sts	0x0064, r24
		}							
	}	
	
	if(pressed3 == 0)
 196:	80 91 64 00 	lds	r24, 0x0064
 19a:	90 91 65 00 	lds	r25, 0x0065
 19e:	00 97       	sbiw	r24, 0x00	; 0
 1a0:	a9 f4       	brne	.+42     	; 0x1cc <ScanButton3+0x66>
	{
		if( on3 == 1 )
 1a2:	80 91 6c 00 	lds	r24, 0x006C
 1a6:	90 91 6d 00 	lds	r25, 0x006D
 1aa:	81 30       	cpi	r24, 0x01	; 1
 1ac:	91 05       	cpc	r25, r1
 1ae:	71 f4       	brne	.+28     	; 0x1cc <ScanButton3+0x66>
 1b0:	ca e0       	ldi	r28, 0x0A	; 10
 1b2:	d0 e0       	ldi	r29, 0x00	; 0
		{
			for(int k=0;k<10;k++)
				Send_Packet(RADDR, LEDOFF3);
 1b4:	84 e4       	ldi	r24, 0x44	; 68
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	68 e8       	ldi	r22, 0x88	; 136
 1ba:	70 e0       	ldi	r23, 0x00	; 0
 1bc:	0e 94 1e 02 	call	0x43c	; 0x43c <Send_Packet>
 1c0:	21 97       	sbiw	r28, 0x01	; 1
	
	if(pressed3 == 0)
	{
		if( on3 == 1 )
		{
			for(int k=0;k<10;k++)
 1c2:	c1 f7       	brne	.-16     	; 0x1b4 <ScanButton3+0x4e>
				Send_Packet(RADDR, LEDOFF3);
			on3 = 0;
 1c4:	10 92 6d 00 	sts	0x006D, r1
 1c8:	10 92 6c 00 	sts	0x006C, r1
		}
	}	
		
	if(pressed3 >= 400)
 1cc:	80 91 64 00 	lds	r24, 0x0064
 1d0:	90 91 65 00 	lds	r25, 0x0065
 1d4:	21 e0       	ldi	r18, 0x01	; 1
 1d6:	80 39       	cpi	r24, 0x90	; 144
 1d8:	92 07       	cpc	r25, r18
 1da:	bc f1       	brlt	.+110    	; 0x24a <ScanButton3+0xe4>
	{
		if(bit_is_clear(PINB,3))
 1dc:	b3 99       	sbic	0x16, 3	; 22
 1de:	1a c0       	rjmp	.+52     	; 0x214 <ScanButton3+0xae>
		{
			//Do Nothing
			if( on3 == 0 || on3 == 1 )
 1e0:	80 91 6c 00 	lds	r24, 0x006C
 1e4:	90 91 6d 00 	lds	r25, 0x006D
 1e8:	82 30       	cpi	r24, 0x02	; 2
 1ea:	91 05       	cpc	r25, r1
 1ec:	70 f5       	brcc	.+92     	; 0x24a <ScanButton3+0xe4>
 1ee:	c0 e0       	ldi	r28, 0x00	; 0
 1f0:	d0 e0       	ldi	r29, 0x00	; 0
			{
				for(int k=0;k<10;k++)
					Send_Packet(RADDR, LEDON3);
 1f2:	84 e4       	ldi	r24, 0x44	; 68
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	66 e6       	ldi	r22, 0x66	; 102
 1f8:	70 e0       	ldi	r23, 0x00	; 0
 1fa:	0e 94 1e 02 	call	0x43c	; 0x43c <Send_Packet>
		if(bit_is_clear(PINB,3))
		{
			//Do Nothing
			if( on3 == 0 || on3 == 1 )
			{
				for(int k=0;k<10;k++)
 1fe:	21 96       	adiw	r28, 0x01	; 1
 200:	ca 30       	cpi	r28, 0x0A	; 10
 202:	d1 05       	cpc	r29, r1
 204:	b1 f7       	brne	.-20     	; 0x1f2 <ScanButton3+0x8c>
					Send_Packet(RADDR, LEDON3);
				on3 = 1;
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	90 93 6d 00 	sts	0x006D, r25
 20e:	80 93 6c 00 	sts	0x006C, r24
 212:	1b c0       	rjmp	.+54     	; 0x24a <ScanButton3+0xe4>
		}
		else
		{
			//PORTB ^= 1 << PINB0;
			
			if( on3 == 1 )
 214:	80 91 6c 00 	lds	r24, 0x006C
 218:	90 91 6d 00 	lds	r25, 0x006D
 21c:	81 30       	cpi	r24, 0x01	; 1
 21e:	91 05       	cpc	r25, r1
 220:	81 f4       	brne	.+32     	; 0x242 <ScanButton3+0xdc>
 222:	c0 e0       	ldi	r28, 0x00	; 0
 224:	d0 e0       	ldi	r29, 0x00	; 0
			{
				for(int k=0;k<10;k++)
					Send_Packet(RADDR, LEDOFF3);
 226:	84 e4       	ldi	r24, 0x44	; 68
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	68 e8       	ldi	r22, 0x88	; 136
 22c:	70 e0       	ldi	r23, 0x00	; 0
 22e:	0e 94 1e 02 	call	0x43c	; 0x43c <Send_Packet>
		{
			//PORTB ^= 1 << PINB0;
			
			if( on3 == 1 )
			{
				for(int k=0;k<10;k++)
 232:	21 96       	adiw	r28, 0x01	; 1
 234:	ca 30       	cpi	r28, 0x0A	; 10
 236:	d1 05       	cpc	r29, r1
 238:	b1 f7       	brne	.-20     	; 0x226 <ScanButton3+0xc0>
					Send_Packet(RADDR, LEDOFF3);
				on3 = 0;
 23a:	10 92 6d 00 	sts	0x006D, r1
 23e:	10 92 6c 00 	sts	0x006C, r1
			}
			
			pressed3 = 0;					
 242:	10 92 65 00 	sts	0x0065, r1
 246:	10 92 64 00 	sts	0x0064, r1
		}
	}
	
	
}
 24a:	df 91       	pop	r29
 24c:	cf 91       	pop	r28
 24e:	08 95       	ret

00000250 <ScanButton2>:



void ScanButton2()
{
 250:	cf 93       	push	r28
 252:	df 93       	push	r29
	if(bit_is_clear(PINB, 2))
 254:	b2 99       	sbic	0x16, 2	; 22
 256:	14 c0       	rjmp	.+40     	; 0x280 <ScanButton2+0x30>
	{
		if(pressed2 >= 1000)
 258:	80 91 62 00 	lds	r24, 0x0062
 25c:	90 91 63 00 	lds	r25, 0x0063
 260:	23 e0       	ldi	r18, 0x03	; 3
 262:	88 3e       	cpi	r24, 0xE8	; 232
 264:	92 07       	cpc	r25, r18
 266:	3c f0       	brlt	.+14     	; 0x276 <ScanButton2+0x26>
		{
			pressed2 = 500;
 268:	84 ef       	ldi	r24, 0xF4	; 244
 26a:	91 e0       	ldi	r25, 0x01	; 1
 26c:	90 93 63 00 	sts	0x0063, r25
 270:	80 93 62 00 	sts	0x0062, r24
 274:	28 c0       	rjmp	.+80     	; 0x2c6 <ScanButton2+0x76>
		}
		else
		{
			pressed2++;
 276:	01 96       	adiw	r24, 0x01	; 1
 278:	90 93 63 00 	sts	0x0063, r25
 27c:	80 93 62 00 	sts	0x0062, r24
		}							
	}	
	
	if(pressed2 == 0)
 280:	80 91 62 00 	lds	r24, 0x0062
 284:	90 91 63 00 	lds	r25, 0x0063
 288:	00 97       	sbiw	r24, 0x00	; 0
 28a:	a9 f4       	brne	.+42     	; 0x2b6 <ScanButton2+0x66>
	{
		if( on2 == 1 )
 28c:	80 91 6a 00 	lds	r24, 0x006A
 290:	90 91 6b 00 	lds	r25, 0x006B
 294:	81 30       	cpi	r24, 0x01	; 1
 296:	91 05       	cpc	r25, r1
 298:	71 f4       	brne	.+28     	; 0x2b6 <ScanButton2+0x66>
 29a:	ca e0       	ldi	r28, 0x0A	; 10
 29c:	d0 e0       	ldi	r29, 0x00	; 0
		{
			for(int k=0;k<10;k++)
				Send_Packet(RADDR, LEDOFF2);
 29e:	84 e4       	ldi	r24, 0x44	; 68
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	65 e5       	ldi	r22, 0x55	; 85
 2a4:	70 e0       	ldi	r23, 0x00	; 0
 2a6:	0e 94 1e 02 	call	0x43c	; 0x43c <Send_Packet>
 2aa:	21 97       	sbiw	r28, 0x01	; 1
	
	if(pressed2 == 0)
	{
		if( on2 == 1 )
		{
			for(int k=0;k<10;k++)
 2ac:	c1 f7       	brne	.-16     	; 0x29e <ScanButton2+0x4e>
				Send_Packet(RADDR, LEDOFF2);
			on2 = 0;
 2ae:	10 92 6b 00 	sts	0x006B, r1
 2b2:	10 92 6a 00 	sts	0x006A, r1
		}
	}	
		
	if(pressed2 >= 400)
 2b6:	80 91 62 00 	lds	r24, 0x0062
 2ba:	90 91 63 00 	lds	r25, 0x0063
 2be:	21 e0       	ldi	r18, 0x01	; 1
 2c0:	80 39       	cpi	r24, 0x90	; 144
 2c2:	92 07       	cpc	r25, r18
 2c4:	bc f1       	brlt	.+110    	; 0x334 <ScanButton2+0xe4>
	{
		if(bit_is_clear(PINB,2))
 2c6:	b2 99       	sbic	0x16, 2	; 22
 2c8:	1a c0       	rjmp	.+52     	; 0x2fe <ScanButton2+0xae>
		{
			//Do Nothing
			if( on2 == 0 || on2 == 1 )
 2ca:	80 91 6a 00 	lds	r24, 0x006A
 2ce:	90 91 6b 00 	lds	r25, 0x006B
 2d2:	82 30       	cpi	r24, 0x02	; 2
 2d4:	91 05       	cpc	r25, r1
 2d6:	70 f5       	brcc	.+92     	; 0x334 <ScanButton2+0xe4>
 2d8:	c0 e0       	ldi	r28, 0x00	; 0
 2da:	d0 e0       	ldi	r29, 0x00	; 0
			{
				for(int k=0;k<10;k++)
					Send_Packet(RADDR, LEDON2);
 2dc:	84 e4       	ldi	r24, 0x44	; 68
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	62 e2       	ldi	r22, 0x22	; 34
 2e2:	70 e0       	ldi	r23, 0x00	; 0
 2e4:	0e 94 1e 02 	call	0x43c	; 0x43c <Send_Packet>
		if(bit_is_clear(PINB,2))
		{
			//Do Nothing
			if( on2 == 0 || on2 == 1 )
			{
				for(int k=0;k<10;k++)
 2e8:	21 96       	adiw	r28, 0x01	; 1
 2ea:	ca 30       	cpi	r28, 0x0A	; 10
 2ec:	d1 05       	cpc	r29, r1
 2ee:	b1 f7       	brne	.-20     	; 0x2dc <ScanButton2+0x8c>
					Send_Packet(RADDR, LEDON2);
				on2 = 1;
 2f0:	81 e0       	ldi	r24, 0x01	; 1
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	90 93 6b 00 	sts	0x006B, r25
 2f8:	80 93 6a 00 	sts	0x006A, r24
 2fc:	1b c0       	rjmp	.+54     	; 0x334 <ScanButton2+0xe4>
		}
		else
		{
			//PORTB ^= 1 << PINB0;
			
			if( on2 == 1 )
 2fe:	80 91 6a 00 	lds	r24, 0x006A
 302:	90 91 6b 00 	lds	r25, 0x006B
 306:	81 30       	cpi	r24, 0x01	; 1
 308:	91 05       	cpc	r25, r1
 30a:	81 f4       	brne	.+32     	; 0x32c <ScanButton2+0xdc>
 30c:	c0 e0       	ldi	r28, 0x00	; 0
 30e:	d0 e0       	ldi	r29, 0x00	; 0
			{
				for(int k=0;k<10;k++)
					Send_Packet(RADDR, LEDOFF2);
 310:	84 e4       	ldi	r24, 0x44	; 68
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	65 e5       	ldi	r22, 0x55	; 85
 316:	70 e0       	ldi	r23, 0x00	; 0
 318:	0e 94 1e 02 	call	0x43c	; 0x43c <Send_Packet>
		{
			//PORTB ^= 1 << PINB0;
			
			if( on2 == 1 )
			{
				for(int k=0;k<10;k++)
 31c:	21 96       	adiw	r28, 0x01	; 1
 31e:	ca 30       	cpi	r28, 0x0A	; 10
 320:	d1 05       	cpc	r29, r1
 322:	b1 f7       	brne	.-20     	; 0x310 <ScanButton2+0xc0>
					Send_Packet(RADDR, LEDOFF2);
				on2 = 0;
 324:	10 92 6b 00 	sts	0x006B, r1
 328:	10 92 6a 00 	sts	0x006A, r1
			}
			
			pressed2 = 0;					
 32c:	10 92 63 00 	sts	0x0063, r1
 330:	10 92 62 00 	sts	0x0062, r1
		}
	}
	
	
}
 334:	df 91       	pop	r29
 336:	cf 91       	pop	r28
 338:	08 95       	ret

0000033a <ScanButton1>:

void ScanButton1()
{
 33a:	cf 93       	push	r28
 33c:	df 93       	push	r29
	
	if(bit_is_clear(PINB, 1))
 33e:	b1 99       	sbic	0x16, 1	; 22
 340:	14 c0       	rjmp	.+40     	; 0x36a <ScanButton1+0x30>
	{
		if(pressed1 >= 1000)
 342:	80 91 60 00 	lds	r24, 0x0060
 346:	90 91 61 00 	lds	r25, 0x0061
 34a:	23 e0       	ldi	r18, 0x03	; 3
 34c:	88 3e       	cpi	r24, 0xE8	; 232
 34e:	92 07       	cpc	r25, r18
 350:	3c f0       	brlt	.+14     	; 0x360 <ScanButton1+0x26>
		{
			pressed1 = 500;
 352:	84 ef       	ldi	r24, 0xF4	; 244
 354:	91 e0       	ldi	r25, 0x01	; 1
 356:	90 93 61 00 	sts	0x0061, r25
 35a:	80 93 60 00 	sts	0x0060, r24
 35e:	28 c0       	rjmp	.+80     	; 0x3b0 <ScanButton1+0x76>
		}
		else
		{
			pressed1++;
 360:	01 96       	adiw	r24, 0x01	; 1
 362:	90 93 61 00 	sts	0x0061, r25
 366:	80 93 60 00 	sts	0x0060, r24
		}							
	}
	
	if(pressed1 == 0)
 36a:	80 91 60 00 	lds	r24, 0x0060
 36e:	90 91 61 00 	lds	r25, 0x0061
 372:	00 97       	sbiw	r24, 0x00	; 0
 374:	a9 f4       	brne	.+42     	; 0x3a0 <ScanButton1+0x66>
	{
		if( on1 == 1 )
 376:	80 91 68 00 	lds	r24, 0x0068
 37a:	90 91 69 00 	lds	r25, 0x0069
 37e:	81 30       	cpi	r24, 0x01	; 1
 380:	91 05       	cpc	r25, r1
 382:	71 f4       	brne	.+28     	; 0x3a0 <ScanButton1+0x66>
 384:	ca e0       	ldi	r28, 0x0A	; 10
 386:	d0 e0       	ldi	r29, 0x00	; 0
		{
			for(int k=0;k<10;k++)
				Send_Packet(RADDR, LEDOFF1);
 388:	84 e4       	ldi	r24, 0x44	; 68
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	63 e3       	ldi	r22, 0x33	; 51
 38e:	70 e0       	ldi	r23, 0x00	; 0
 390:	0e 94 1e 02 	call	0x43c	; 0x43c <Send_Packet>
 394:	21 97       	sbiw	r28, 0x01	; 1
	
	if(pressed1 == 0)
	{
		if( on1 == 1 )
		{
			for(int k=0;k<10;k++)
 396:	c1 f7       	brne	.-16     	; 0x388 <ScanButton1+0x4e>
				Send_Packet(RADDR, LEDOFF1);
			on1 = 0;
 398:	10 92 69 00 	sts	0x0069, r1
 39c:	10 92 68 00 	sts	0x0068, r1
		}
	}		
		
	if(pressed1 >= 400)
 3a0:	80 91 60 00 	lds	r24, 0x0060
 3a4:	90 91 61 00 	lds	r25, 0x0061
 3a8:	21 e0       	ldi	r18, 0x01	; 1
 3aa:	80 39       	cpi	r24, 0x90	; 144
 3ac:	92 07       	cpc	r25, r18
 3ae:	bc f1       	brlt	.+110    	; 0x41e <ScanButton1+0xe4>
	{
		if(bit_is_clear(PINB,1))
 3b0:	b1 99       	sbic	0x16, 1	; 22
 3b2:	1a c0       	rjmp	.+52     	; 0x3e8 <ScanButton1+0xae>
		{
			//Do Nothing
			if( on1 == 0 || on1 == 1 )
 3b4:	80 91 68 00 	lds	r24, 0x0068
 3b8:	90 91 69 00 	lds	r25, 0x0069
 3bc:	82 30       	cpi	r24, 0x02	; 2
 3be:	91 05       	cpc	r25, r1
 3c0:	70 f5       	brcc	.+92     	; 0x41e <ScanButton1+0xe4>
 3c2:	c0 e0       	ldi	r28, 0x00	; 0
 3c4:	d0 e0       	ldi	r29, 0x00	; 0
			{
				for(int k=0;k<10;k++)
					Send_Packet(RADDR, LEDON1);
 3c6:	84 e4       	ldi	r24, 0x44	; 68
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	61 e1       	ldi	r22, 0x11	; 17
 3cc:	70 e0       	ldi	r23, 0x00	; 0
 3ce:	0e 94 1e 02 	call	0x43c	; 0x43c <Send_Packet>
		if(bit_is_clear(PINB,1))
		{
			//Do Nothing
			if( on1 == 0 || on1 == 1 )
			{
				for(int k=0;k<10;k++)
 3d2:	21 96       	adiw	r28, 0x01	; 1
 3d4:	ca 30       	cpi	r28, 0x0A	; 10
 3d6:	d1 05       	cpc	r29, r1
 3d8:	b1 f7       	brne	.-20     	; 0x3c6 <ScanButton1+0x8c>
					Send_Packet(RADDR, LEDON1);
				on1 = 1;
 3da:	81 e0       	ldi	r24, 0x01	; 1
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	90 93 69 00 	sts	0x0069, r25
 3e2:	80 93 68 00 	sts	0x0068, r24
 3e6:	1b c0       	rjmp	.+54     	; 0x41e <ScanButton1+0xe4>
		}
		else
		{
			//PORTB ^= 1 << PINB0;
			
			if( on1 == 1 )
 3e8:	80 91 68 00 	lds	r24, 0x0068
 3ec:	90 91 69 00 	lds	r25, 0x0069
 3f0:	81 30       	cpi	r24, 0x01	; 1
 3f2:	91 05       	cpc	r25, r1
 3f4:	81 f4       	brne	.+32     	; 0x416 <ScanButton1+0xdc>
 3f6:	c0 e0       	ldi	r28, 0x00	; 0
 3f8:	d0 e0       	ldi	r29, 0x00	; 0
			{
				for(int k=0;k<10;k++)
					Send_Packet(RADDR, LEDOFF1);
 3fa:	84 e4       	ldi	r24, 0x44	; 68
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	63 e3       	ldi	r22, 0x33	; 51
 400:	70 e0       	ldi	r23, 0x00	; 0
 402:	0e 94 1e 02 	call	0x43c	; 0x43c <Send_Packet>
		{
			//PORTB ^= 1 << PINB0;
			
			if( on1 == 1 )
			{
				for(int k=0;k<10;k++)
 406:	21 96       	adiw	r28, 0x01	; 1
 408:	ca 30       	cpi	r28, 0x0A	; 10
 40a:	d1 05       	cpc	r29, r1
 40c:	b1 f7       	brne	.-20     	; 0x3fa <ScanButton1+0xc0>
					Send_Packet(RADDR, LEDOFF1);
				on1 = 0;
 40e:	10 92 69 00 	sts	0x0069, r1
 412:	10 92 68 00 	sts	0x0068, r1
			}
			
			pressed1 = 0;					
 416:	10 92 61 00 	sts	0x0061, r1
 41a:	10 92 60 00 	sts	0x0060, r1
		}
	}
	
}
 41e:	df 91       	pop	r29
 420:	cf 91       	pop	r28
 422:	08 95       	ret

00000424 <USART_Init>:


void USART_Init(void)
{
	//Set baud rate
	UBRRL=(uint8_t)UBRRVAL;		//low byte
 424:	83 e3       	ldi	r24, 0x33	; 51
 426:	89 b9       	out	0x09, r24	; 9
	UBRRH=(UBRRVAL>>8);	//high byte
 428:	10 bc       	out	0x20, r1	; 32
	//Set data frame format: asynchronous mode,no parity, 1 stop bit, 8 bit size
	UCSRC=(1<<URSEL)|(0<<UMSEL)|(0<<UPM1)|(0<<UPM0)|
 42a:	86 e8       	ldi	r24, 0x86	; 134
 42c:	80 bd       	out	0x20, r24	; 32
		(0<<USBS)|(0<<UCSZ2)|(1<<UCSZ1)|(1<<UCSZ0);	
	//Enable Transmitter and Receiver and Interrupt on receive complete
	UCSRB=(1<<TXEN);
 42e:	88 e0       	ldi	r24, 0x08	; 8
 430:	8a b9       	out	0x0a, r24	; 10
}
 432:	08 95       	ret

00000434 <USART_vSendByte>:
void USART_vSendByte(uint8_t u8Data)
{
    // Wait if a byte is being transmitted
    while((UCSRA&(1<<UDRE)) == 0);
 434:	5d 9b       	sbis	0x0b, 5	; 11
 436:	fe cf       	rjmp	.-4      	; 0x434 <USART_vSendByte>
    // Transmit data
    UDR = u8Data; 
 438:	8c b9       	out	0x0c, r24	; 12
}
 43a:	08 95       	ret

0000043c <Send_Packet>:
void Send_Packet(uint8_t addr, uint8_t cmd)
{
 43c:	0f 93       	push	r16
 43e:	1f 93       	push	r17
 440:	18 2f       	mov	r17, r24
 442:	06 2f       	mov	r16, r22
	USART_vSendByte(SYNC);//send synchro byte	
 444:	8a ea       	ldi	r24, 0xAA	; 170
 446:	0e 94 1a 02 	call	0x434	; 0x434 <USART_vSendByte>
	USART_vSendByte(addr);//send receiver address
 44a:	81 2f       	mov	r24, r17
 44c:	0e 94 1a 02 	call	0x434	; 0x434 <USART_vSendByte>
	USART_vSendByte(cmd);//send increment command
 450:	80 2f       	mov	r24, r16
 452:	0e 94 1a 02 	call	0x434	; 0x434 <USART_vSendByte>
	USART_vSendByte((addr+cmd));//send checksum
 456:	80 2f       	mov	r24, r16
 458:	81 0f       	add	r24, r17
 45a:	0e 94 1a 02 	call	0x434	; 0x434 <USART_vSendByte>
}
 45e:	1f 91       	pop	r17
 460:	0f 91       	pop	r16
 462:	08 95       	ret

00000464 <delayms>:
void delayms(uint8_t t)//delay in ms
{
	uint8_t i;
	for(i=0;i<t;i++)
 464:	88 23       	and	r24, r24
 466:	51 f0       	breq	.+20     	; 0x47c <delayms+0x18>
 468:	90 e0       	ldi	r25, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 46a:	e9 ef       	ldi	r30, 0xF9	; 249
 46c:	f0 e0       	ldi	r31, 0x00	; 0
 46e:	31 97       	sbiw	r30, 0x01	; 1
 470:	f1 f7       	brne	.-4      	; 0x46e <delayms+0xa>
 472:	00 c0       	rjmp	.+0      	; 0x474 <delayms+0x10>
 474:	00 00       	nop
 476:	9f 5f       	subi	r25, 0xFF	; 255
 478:	98 17       	cp	r25, r24
 47a:	b8 f3       	brcs	.-18     	; 0x46a <delayms+0x6>
 47c:	08 95       	ret

0000047e <main>:
		_delay_ms(1);
}
int main(void)
{
	USART_Init();
 47e:	0e 94 12 02 	call	0x424	; 0x424 <USART_Init>
	
	DDRB |= 1 << PINB0;//on the turning microcontroller on
 482:	b8 9a       	sbi	0x17, 0	; 23
	
	
	DDRB &= ~(1 << PINB1);
 484:	b9 98       	cbi	0x17, 1	; 23
	DDRB &= ~(1 << PINB2);
 486:	ba 98       	cbi	0x17, 2	; 23
	DDRB &= ~(1 << PINB3);
 488:	bb 98       	cbi	0x17, 3	; 23
	DDRB &= ~(1 << PINB4);
 48a:	bc 98       	cbi	0x17, 4	; 23
	
	PORTB |= 1 << PINB1;
 48c:	c1 9a       	sbi	0x18, 1	; 24
	PORTB |= 1 << PINB2;
 48e:	c2 9a       	sbi	0x18, 2	; 24
	PORTB |= 1 << PINB3;
 490:	c3 9a       	sbi	0x18, 3	; 24
	PORTB |= 1 << PINB4;
 492:	c4 9a       	sbi	0x18, 4	; 24
	
	PORTB |= 1 << PINB0;
 494:	c0 9a       	sbi	0x18, 0	; 24
 496:	8f e3       	ldi	r24, 0x3F	; 63
 498:	9d e0       	ldi	r25, 0x0D	; 13
 49a:	a3 e0       	ldi	r26, 0x03	; 3
 49c:	81 50       	subi	r24, 0x01	; 1
 49e:	90 40       	sbci	r25, 0x00	; 0
 4a0:	a0 40       	sbci	r26, 0x00	; 0
 4a2:	e1 f7       	brne	.-8      	; 0x49c <main+0x1e>
 4a4:	00 c0       	rjmp	.+0      	; 0x4a6 <main+0x28>
 4a6:	00 00       	nop
	_delay_ms(1000);
	PORTB &= ~(1<<PINB0);
 4a8:	c0 98       	cbi	0x18, 0	; 24
 4aa:	8f e3       	ldi	r24, 0x3F	; 63
 4ac:	9d e0       	ldi	r25, 0x0D	; 13
 4ae:	a3 e0       	ldi	r26, 0x03	; 3
 4b0:	81 50       	subi	r24, 0x01	; 1
 4b2:	90 40       	sbci	r25, 0x00	; 0
 4b4:	a0 40       	sbci	r26, 0x00	; 0
 4b6:	e1 f7       	brne	.-8      	; 0x4b0 <main+0x32>
 4b8:	00 c0       	rjmp	.+0      	; 0x4ba <main+0x3c>
 4ba:	00 00       	nop
	_delay_ms(1000);
	
	while(1)
	{
		
		ScanButton1();
 4bc:	0e 94 9d 01 	call	0x33a	; 0x33a <ScanButton1>
		ScanButton2();
 4c0:	0e 94 28 01 	call	0x250	; 0x250 <ScanButton2>
		ScanButton3();
 4c4:	0e 94 b3 00 	call	0x166	; 0x166 <ScanButton3>
		ScanButton4();
 4c8:	0e 94 3e 00 	call	0x7c	; 0x7c <ScanButton4>
 4cc:	f7 cf       	rjmp	.-18     	; 0x4bc <main+0x3e>

000004ce <_exit>:
 4ce:	f8 94       	cli

000004d0 <__stop_program>:
 4d0:	ff cf       	rjmp	.-2      	; 0x4d0 <__stop_program>
