
MilkMixer_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000006e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  000000c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000097  00000000  00000000  00000790  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  00000827  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000001b  00000000  00000000  00000847  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000196  00000000  00000000  00000862  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000106  00000000  00000000  000009f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001e2  00000000  00000000  00000afe  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000020  00000000  00000000  00000ce0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000fb  00000000  00000000  00000d00  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubtypes 00000038  00000000  00000000  00000dfb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	02 d0       	rcall	.+4      	; 0x38 <main>
  34:	1a c0       	rjmp	.+52     	; 0x6a <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <main>:
#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
	DDRC  |= 1 << PINC5; // this is for Relay
  38:	a5 9a       	sbi	0x14, 5	; 20
	PORTC |= 1 << PINC5;
  3a:	ad 9a       	sbi	0x15, 5	; 21
	
	DDRB  |= 1 << PINB1;// this is for green or ON led
  3c:	b9 9a       	sbi	0x17, 1	; 23
	PORTB |= 1 << PINB1;
  3e:	c1 9a       	sbi	0x18, 1	; 24
	
	
    while(1) // make Relay 10 sec ON and 3 sec OFF
    {
		PORTB |= 1 << PINB1;
  40:	c1 9a       	sbi	0x18, 1	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  42:	8f e3       	ldi	r24, 0x3F	; 63
  44:	92 e4       	ldi	r25, 0x42	; 66
  46:	af e0       	ldi	r26, 0x0F	; 15
  48:	81 50       	subi	r24, 0x01	; 1
  4a:	90 40       	sbci	r25, 0x00	; 0
  4c:	a0 40       	sbci	r26, 0x00	; 0
  4e:	e1 f7       	brne	.-8      	; 0x48 <__SREG__+0x9>
  50:	00 c0       	rjmp	.+0      	; 0x52 <__SREG__+0x13>
  52:	00 00       	nop
		_delay_ms(5000);
		PORTB &= ~(1 << PINB1);
  54:	c1 98       	cbi	0x18, 1	; 24
  56:	8f e7       	ldi	r24, 0x7F	; 127
  58:	94 e8       	ldi	r25, 0x84	; 132
  5a:	ae e1       	ldi	r26, 0x1E	; 30
  5c:	81 50       	subi	r24, 0x01	; 1
  5e:	90 40       	sbci	r25, 0x00	; 0
  60:	a0 40       	sbci	r26, 0x00	; 0
  62:	e1 f7       	brne	.-8      	; 0x5c <__SREG__+0x1d>
  64:	00 c0       	rjmp	.+0      	; 0x66 <__SREG__+0x27>
  66:	00 00       	nop
  68:	eb cf       	rjmp	.-42     	; 0x40 <__SREG__+0x1>

0000006a <_exit>:
  6a:	f8 94       	cli

0000006c <__stop_program>:
  6c:	ff cf       	rjmp	.-2      	; 0x6c <__stop_program>
